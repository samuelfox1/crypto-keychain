{"version":3,"sources":["Pages/Home.js","Utilty/createPassword.js","Utilty/getUserPassword.js","Utilty/config.js","Utilty/getExistingChains.js","Utilty/renameKeychain/getNewChainName.js","Utilty/LocalStorage/getLocalStorageDecrypted.js","Utilty/LocalStorage/setLocalStorage.js","Utilty/LocalStorage/deleteKeychain.js","Components/KeychainPageItems/AddItemForm.js","Components/KeychainPageItems/KeychainItem.js","Utilty/copyToClipboard.js","Components/KeychainPageItems/KeychainSettings.js","Utilty/LocalStorage/getLocalStorageEncrypted.js","Pages/Keychain.js","Pages/PasswordGenerator.js","Context/App.js","Components/HomePageItems/DefaultLayout.js","Components/HomePageItems/CreateChainForm.js","Components/HomePageItems/AccessExistingChain.js","Context/Home.js","Context/Keychain.js","Components/CustomNav/NavTabs.js","Components/CustomNav/index.js","Components/Footer/index.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Home","HomeComponent","useContext","HomeContext","Container","className","options","number","special","lowercase","uppercase","generatePasswordString","values","length","str","includedTypes","randomNum","len","Math","floor","random","i","randomKey","indexOf","push","defaultConfig","createPassword","config","getUserPassword","prompt","keyBase","getExistingChains","keychainNames","Object","entries","localStorage","k","split","shift","join","getNewChainName","existingChains","collectName","newName","alert","getLocalStorageDecrypted","keychainName","pw","console","log","existingData","getItem","bytes","AES","decrypt","JSON","parse","toString","enc","Utf8","error","setLocalStorage","arr","setItem","encrypt","stringify","deleteKeychain","removeItem","AddItemForm","useState","validInputs","setValidInputs","KeychainContext","keychainData","setKeychainData","updateKeychainComponent","name","value","id","uuid","inputs","setInputs","handleInputChange","e","target","useEffect","Row","Col","Form","onSubmit","handleAddKeychainItem","preventDefault","updatedArr","items","Group","controlId","Label","Control","type","onChange","as","rows","size","style","resize","Button","variant","onClick","disabled","KeychainItem","viewKeychainItem","setViewKeychainItem","copiedMessage","setCopiedMessage","deleteKeychainItem","handleViewKeychainItemValue","handleCopyToClipboard","navigator","clipboard","writeText","then","copyToClipboard","KeychainSettings","resetKeychainData","updateAppComponent","AppContext","handleDestroyChain","force","password","confirmDelete","window","confirm","handleRenameChain","handleBackupChain","email","d","Date","dateString","getMonth","getDate","getFullYear","hash","getLocalStorageEncrypted","formatName","body","open","Keychain","KeychainComponent","displayForm","displayChainSettings","setDisplayChainSettings","toggleDisplayChainOptions","xs","md","map","PasswordGenerator","textAreaRows","setTextAreaRows","min","max","pwLength","setPwLength","pwText","setPwText","selectedValues","setSelectedValues","label","checked","checkBox","setCheckBox","btnOptions","handleGeneratePassword","Spinner","animation","role","displayedButton","setDisplayedButton","handleCheckboxChange","interval","setInterval","setTimeout","clearInterval","checkedBoxes","box","Array","from","key","Check","Range","calculatedRows","createContext","AppProvider","children","defaultComponent","AppComponent","setAppComponent","Provider","componentName","DefaultLayout","updateHomeComponent","recovery","URLSearchParams","location","search","get","decryptedData","recoveryName","recoveryHash","href","getPw","loadRecoveryIfNeeded","CreateChain","pwlength","pwmatch","errorMessage","setErrorMessage","confirmPassword","formInputs","setFormInputs","validFormInputs","setValidFormInputs","AccessExistingChain","handleAccessChain","data","chain","idx","HomeProvider","defaultKey","setHomeComponent","defaultKeychainData","KeychainProvider","setDisplayForm","setKeychainComponent","filtered","filter","item","NavTabs","setKey","keychainTab","setKeychainTab","handleUpdateKey","Tab","eventKey","title","Tabs","activeKey","onSelect","CustomNav","fluid","sx","sm","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d79c23.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { HomeContext } from '../Context'\n// import { getUserPassword } from '../Utilty'\n\nexport default function Home() {\n\n    const { HomeComponent } = useContext(HomeContext)\n\n    return (\n        <Container className=\"my-5\">\n            {HomeComponent}\n        </Container >\n    )\n}\n","const options = {\n    number: '0123456789',\n    special: `!#$%&*+-/;<=>?@^_'|~\\\\`,\n    lowercase: 'abcdefghijklmnopqrstuvwxyz',\n    uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ`\n};\n\n\nconst generatePasswordString = ({ values, length }) => {\n    let str = '';\n    let includedTypes = [];\n\n    const randomNum = (len) => Math.floor(Math.random() * len);\n\n    for (let i = 0; i < length; i++) {\n        const randomKey = values[randomNum(values.length)];\n        str += options[randomKey][randomNum(options[randomKey].length)];\n        if (includedTypes.indexOf(randomKey) === -1) includedTypes.push(randomKey);\n    };\n\n    if (includedTypes.length === values.length) return str;\n\n    return generatePasswordString({ values, length });\n}\n\nconst defaultConfig = {\n    values: [\n        \"number\",\n        \"special\",\n        \"lowercase\",\n        \"uppercase\"\n    ],\n    length: 128\n}\n\nexport const createPassword = (config = defaultConfig) => (\n    // validate there are selected values & a password length before calling\n    config.values.length\n    && config.length\n    && generatePasswordString(config)\n);","export const getUserPassword = () => prompt('keychain access password');\n// export const getUserPassword = () => 'password'","export const keyBase = 'cryptoKC';\n","import { keyBase } from './config'\n\nexport const getExistingChains = () => {\n    const keychainNames = [];\n    for (const [key] of Object.entries(localStorage)) {\n        // format each name by removing the 'keyBase-' text\n        const k = key.split('-');\n        if (k[0] !== keyBase) continue;\n        k.shift();\n        keychainNames.push(k.join('-'));\n    };\n    return keychainNames;\n};","import { getExistingChains } from \"..\"\n\nexport const getNewChainName = () => {\n    const existingChains = getExistingChains()\n\n    const collectName = () => {\n        const newName = prompt('please enter a new name')\n\n        // if user clicks cancel\n        if (newName === null) return null\n\n        // if no name is entered\n        if (!newName) return getNewChainName()\n\n        // if name already exists\n        if (existingChains.indexOf(newName) !== -1) {\n            alert(`${newName} already exists, enter a different name.`)\n            return collectName()\n        }\n        return newName\n    }\n\n    return collectName()\n}","import { AES, enc, } from \"crypto-js/\";\n\nimport { keyBase } from '../config'\n\nexport const getLocalStorageDecrypted = (keychainName, pw) => {\n    if (!keychainName) return console.log('no chain name selected');\n\n    const existingData = localStorage.getItem(`${keyBase}-${keychainName}`);\n    if (!existingData) return console.log('missing chain data, please load from backup');\n\n    try {\n\n        const bytes = AES.decrypt(existingData, pw);\n        const decryptedData = JSON.parse(bytes.toString(enc.Utf8));\n        return decryptedData;\n\n    } catch (error) {\n        alert('unauthorized')\n        return null\n    };\n};","import { AES } from \"crypto-js/\";\nimport { keyBase } from '../config'\n\nexport const setLocalStorage = (keychainName, pw, arr) => {\n    if (!keychainName || !pw) return\n    localStorage.setItem(`${keyBase}-${keychainName}`, AES.encrypt(JSON.stringify(arr), pw).toString())\n};","import { keyBase } from \"../config\"\n\nexport const deleteKeychain = (keychainName) => localStorage.removeItem(`${keyBase}-${keychainName}`)","import React, { useContext, useEffect, useState } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { Col, Form, Row, Button } from 'react-bootstrap'\nimport { KeychainContext } from '../../Context'\nimport { createPassword, getUserPassword } from '../../Utilty'\nimport { getLocalStorageDecrypted, setLocalStorage } from '../../Utilty'\n\nexport default function AddItemForm() {\n\n    const [validInputs, setValidInputs] = useState(false)\n    const { keychainData, setKeychainData, updateKeychainComponent } = useContext(KeychainContext)\n    const [inputs, setInputs] = useState({\n        name: '',\n        value: '',\n        id: uuid()\n    })\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setInputs({ ...inputs, [name]: value })\n    }\n\n    const handleSuggestPassword = () => {\n        setInputs({ ...inputs, value: createPassword() })\n    }\n\n    const handleAddKeychainItem = (e) => {\n        if (!e) return\n        e.preventDefault()\n        const { name } = keychainData\n\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) return handleAddKeychainItem()\n\n        const arr = getLocalStorageDecrypted(name, pw)\n        if (!arr) return handleAddKeychainItem()\n        const updatedArr = [inputs, ...arr]\n        setLocalStorage(keychainData.name, pw, updatedArr)\n        setKeychainData({ ...keychainData, items: updatedArr })\n        setInputs({ name: '', value: '' })\n        updateKeychainComponent()\n    }\n\n    useEffect(() => {\n        if (!inputs.name || !inputs.value) return setValidInputs(false)\n        if (!validInputs) setValidInputs(true)\n    }, [inputs])\n\n    return (\n        <Row className=\"border shadow flex-column m-0 mb-3\">\n            <Col className=\"p-3\">\n                <h3 className=\"mb-1\">Add item</h3>\n                <Form onSubmit={handleAddKeychainItem}>\n\n                    <Form.Group className=\"mb-1\" controlId=\"keychainItemName\">\n                        <Form.Label className=\"mb-0\">name</Form.Label>\n                        <Form.Control type=\"text\" name='name' value={inputs.name} onChange={handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-1\" controlId=\"keychainItemValue\">\n                        <Form.Label className=\"mb-0\">value</Form.Label>\n                        <Form.Control\n                            className=\"text-center\"\n                            as=\"textarea\"\n                            rows={6}\n                            name='value'\n                            size=\"sm\"\n                            value={inputs.value}\n                            style={{ resize: \"none\" }}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"d-flex justify-content-end\">\n                        <Button className=\"p-0 px-1\" variant=\"outline-warning text-dark\" size=\"sm\" onClick={handleSuggestPassword}>\n                            suggest password?\n                        </Button>\n                    </Form.Group>\n\n                    <hr />\n                    <Form.Group className=\"d-flex justify-content-end pb-3\">\n                        {validInputs\n                            ? <Button\n                                type=\"submit\"\n                                variant=\"outline-warning text-dark\"\n                            >\n                                add item\n                            </Button>\n                            : <Button disabled variant=\"outline-warning text-dark\" >add item</Button>\n                        }\n                    </Form.Group>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Col, Row, Form } from 'react-bootstrap';\nimport { FaEye, FaEyeSlash, FaTrashAlt, FaCopy } from \"react-icons/fa\";\nimport { KeychainContext } from '../../Context';\nimport { copyToClipboard } from '../../Utilty';\n\n\nexport default function KeychainItem({ name, value, id }) {\n\n    const [viewKeychainItem, setViewKeychainItem] = useState(false)\n    const [copiedMessage, setCopiedMessage] = useState('')\n\n    const { deleteKeychainItem } = useContext(KeychainContext)\n\n    const handleViewKeychainItemValue = () => {\n        viewKeychainItem && setCopiedMessage(false)\n        setViewKeychainItem(!viewKeychainItem)\n    }\n\n    const handleCopyToClipboard = (value) => {\n        copyToClipboard(value)\n        setCopiedMessage('copied!')\n    }\n\n\n    return (\n        <Row className=\"border shadow-sm flex-column m-0 mb-3\">\n            <Col className=\"d-flex justify-content-between align-items-center py-1\">\n                <FaTrashAlt onClick={() => deleteKeychainItem(name, id)} />\n                <p>{name}</p>\n                {viewKeychainItem\n                    ? <FaEyeSlash onClick={handleViewKeychainItemValue} />\n                    : <FaEye onClick={handleViewKeychainItemValue} />\n                }\n            </Col>\n            <Col className=\"text-center p-0\">\n\n                {viewKeychainItem &&\n                    <Form>\n                        <Form.Group className=\"mx-2 mb-3\" controlId=\"keychainItemValue\">\n                            <Form.Control\n                                className=\"text-center\"\n                                as=\"textarea\"\n                                rows={6}\n                                name='value'\n                                size=\"sm\"\n                                value={value}\n                                disabled\n                                style={{ resize: \"none\" }}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"d-flex justify-content-end m-0\">\n                            {copiedMessage}\n                            <FaCopy\n                                className=\"m-2\"\n                                onClick={() => handleCopyToClipboard(value)}\n                            />\n                        </Form.Group>\n                    </Form>\n                }\n            </Col>\n        </Row>\n    )\n}\n","export const copyToClipboard = (value) => {\n\n    navigator.clipboard.writeText(value)\n        .then(() => console.log(value));\n}\n\n\n// export const focusAndCopyToCb = (el) => {\n//     const textVal = el.text().trim()\n//     if (!textVal) return\n//     el.select() && el.focus();\n//     copyToCb(textVal)\n// };","import React, { useContext } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport { AppContext, KeychainContext } from '../../Context'\nimport { deleteKeychain, getLocalStorageDecrypted, getLocalStorageEncrypted, getNewChainName, getUserPassword, setLocalStorage } from '../../Utilty'\nimport { keyBase } from '../../Utilty/config'\n\nexport default function KeychainSettings({ }) {\n\n    const { keychainData, setKeychainData, resetKeychainData } = useContext(KeychainContext)\n    const { updateAppComponent } = useContext(AppContext)\n\n    const handleRenameChain = () => {\n        // authorize user\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) return handleRenameChain()\n\n        if (!getLocalStorageDecrypted(keychainData.name, pw)) return handleRenameChain()\n\n        const newName = getNewChainName()\n        // if no name is available / user clicked cancel during prompt\n        if (!newName) return\n\n        const { name, items } = keychainData\n        // save chain with new name\n        setLocalStorage(newName, pw, items)\n        // destroy old chain\n        handleDestroyChain(name, pw, true)\n        // update context state\n        setKeychainData({ ...keychainData, name: newName })\n    }\n\n    const handleBackupChain = () => {\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) handleBackupChain()\n\n        if (!getLocalStorageDecrypted(keychainData.name, pw)) return handleBackupChain()\n\n        const email = prompt('enter email to send backup')\n        // const email = 'samueljasonfox@gmail.com'\n        if (email === null) return\n        if (!email) return handleBackupChain()\n        const { name: keychainName } = keychainData\n        const d = new Date()\n        const dateString = `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`\n\n        const hash = getLocalStorageEncrypted(keychainName).split('+').join('%2b')\n        const formatName = keychainName.split(' ').join('_')\n\n        const body = `backup code:\n            %0A%0A%0A\n            ${hash}\n            %0A%0A%0A\n            backup link:\n            %0A\n            1. copy the url below\n            %0A\n            2. paste in your browser to recover the keychain\n            %0A%0A%0A\n            https://samuelfox1.github.io/crypto-keychain?recovery=${formatName}cryptoKeychain${hash}\n            `\n        // window.open(`mailto:${email}?subject=cryptoKeychain_Backup_${keychainName}_${dateString}&body=${getLocalStorageEncrypted(keychainName)}`)\n        window.open(`mailto:${email}?subject=cryptoKeychain_Backup_${formatName}_${dateString}&body=${body}`)\n    }\n\n    const handleDestroyChain = (keychainName, pw, force = false) => {\n        // authorize user\n        const password = pw ? pw : getUserPassword()\n        if (password === null) return\n        if (!password) handleDestroyChain(keychainName)\n\n        if (!getLocalStorageDecrypted(keychainData.name, password)) return handleDestroyChain(keychainName)\n\n        // confirm delete\n        const confirmDelete = force ? true : window.confirm(`Deleting ${keychainName}, are you sure?`)\n        if (!confirmDelete) return\n\n        // delete chain\n        deleteKeychain(keychainName)\n        // reset context state\n        resetKeychainData()\n        // redirect to landing\n        updateAppComponent('Home')\n    }\n\n    return (\n        <Row className=\"px-3\">\n            <Col>\n                <Row className=\"mb-3\">\n                    <h6 className=\"px-0\">settings</h6>\n                </Row>\n                <Row>\n                    <Button\n                        className=\"mb-3\"\n                        variant=\"outline-warning text-dark\"\n                        onClick={handleRenameChain}\n                    >\n                        rename\n                    </Button>\n                    <Button\n                        className=\"mb-3\"\n                        variant=\"outline-info text-dark\"\n                        onClick={handleBackupChain}\n                    >\n                        backup\n                    </Button>\n                    <Button\n                        className=\"my-3\"\n                        size=\"sm\"\n                        variant=\"outline-danger text-dark\"\n                        onClick={() => handleDestroyChain(keychainData.name)}\n                    >\n                        destroy\n                    </Button>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n","import { keyBase } from '../config'\n\nexport const getLocalStorageEncrypted = (keychainName) => localStorage.getItem(`${keyBase}-${keychainName}`);","import React, { useContext, useState } from 'react'\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport { KeychainItem, KeychainSettings } from '../Components/KeychainPageItems'\nimport { KeychainContext } from '../Context'\n\nexport default function Keychain() {\n\n\n    const { keychainData, KeychainComponent, updateKeychainComponent, displayForm } = useContext(KeychainContext)\n    const [displayChainSettings, setDisplayChainSettings] = useState(false)\n    const { name, items } = keychainData\n\n    const toggleDisplayForm = () => {\n        if (!displayForm) updateKeychainComponent('addKeychainItemForm')\n        else updateKeychainComponent()\n    }\n\n    const toggleDisplayChainOptions = () => {\n        setDisplayChainSettings(!displayChainSettings)\n    }\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col xs={11} md={6} className=\"shadow border-orange p-3 border-orange\">\n\n                    <Row className=\"mb-1\">\n                        <Col className=\"d-flex justify-content-between align-items-center py-2\">\n                            <h3 className=\"my-0\">{name}</h3>\n                            <Button\n                                variant=\"outline-warning text-dark\"\n                                onClick={toggleDisplayChainOptions}\n                            >\n                                settings\n                                {displayChainSettings\n                                    ? <FaAngleUp onClick={toggleDisplayChainOptions} />\n                                    : <FaAngleDown />\n                                }\n                            </Button>\n                        </Col>\n                    </Row>\n                    <hr />\n                    {displayChainSettings\n                        ? <KeychainSettings />\n                        : <>\n                            <Row>\n                                <Col>\n                                    <h6 className=\"px-0\">items</h6>\n                                </Col>\n                            </Row>\n                            <Row className=\"justify-content-center mb-3\" >\n                                <Col>\n                                    {items.map(({ name, value, id }) => <KeychainItem key={id} id={id} name={name} value={value} />)}\n                                    <hr />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"px-0\">\n                                <Col className=\"d-flex justify-content-end px-0\">\n                                    <Button\n                                        className=\"mb-3 mx-3\"\n                                        variant=\"outline-warning text-dark\"\n                                        onClick={toggleDisplayForm}\n                                    >\n                                        {displayForm ? 'cancel' : 'add item'}\n                                    </Button>\n                                </Col>\n                                {KeychainComponent}\n                            </Row>\n                        </>\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Form, Button, Spinner } from 'react-bootstrap'\nimport { createPassword } from '../Utilty'\n\nexport default function PasswordGenerator() {\n\n    const [textAreaRows, setTextAreaRows] = useState(3)\n    const [pwLength, setPwLength] = useState({\n        min: 8,\n        max: 128,\n        value: 68\n    })\n    const [pwText, setPwText] = useState('')\n    const [selectedValues, setSelectedValues] = useState([])\n    const [checkBox, setCheckBox] = useState({\n        number: {\n            id: 'number',\n            type: 'checkbox',\n            label: 'numbers',\n            checked: true\n        },\n        special: {\n            id: 'special',\n            type: 'checkbox',\n            label: 'special characters',\n            checked: true\n        },\n        lowercase: {\n            id: 'lowercase',\n            type: 'checkbox',\n            label: 'letters - lowercase',\n            checked: true\n        },\n        uppercase: {\n            id: 'uppercase',\n            type: 'checkbox',\n            label: 'letters - uppercase',\n            checked: true\n        }\n    })\n    const btnOptions = {\n\n        defaultBtn: () => (\n            < Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                disabled\n            >\n                generate\n            </Button >\n        )\n        ,\n        activeBtn: () => (\n            < Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                onClick={handleGeneratePassword}\n            >\n                generate\n            </Button >\n        )\n        ,\n        loadingBtn: () => (\n            <Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                disabled\n            >\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n            </Button>\n        )\n\n    }\n\n    const [displayedButton, setDisplayedButton] = useState(btnOptions.defaultBtn())\n    const handleCheckboxChange = (e) => {\n        const { id, checked } = e.target\n        setPwText('')\n        setCheckBox({\n            ...checkBox,\n            [id]: {\n                ...checkBox[id],\n                checked\n            }\n        })\n    }\n\n    const handleRangeChange = (e) => {\n        const { value } = e.target\n        setPwText('')\n        setPwLength({ ...pwLength, value })\n        /* on a mobile device, the textarea needs to be:\n            - minimum 1 row tall\n            - 7 rows tall if 128 is selected\n            128/7 ≈ 18\n        */\n        const calculatedRows = Math.floor(value / 18)\n        setTextAreaRows(calculatedRows || 1)\n        setDisplayedButton(btnOptions.activeBtn())\n    }\n\n    const handleGeneratePassword = () => {\n\n        const config = {\n            values: selectedValues,\n            length: pwLength.value\n        };\n\n        setDisplayedButton(btnOptions.loadingBtn())\n\n        let interval = setInterval(() => setPwText(createPassword(config)), 100)\n\n        setTimeout(() => {\n            clearInterval(interval)\n            setDisplayedButton(btnOptions.activeBtn())\n        }, 2000)\n    }\n\n    useEffect(() => {\n        const checkedBoxes = []\n        for (const [_, box] of Object.entries(checkBox)) {\n            box.checked && checkedBoxes.push(box.id);\n        };\n        setSelectedValues(checkedBoxes)\n    }, [checkBox])\n\n    useEffect(() => {\n        if (selectedValues.length) setDisplayedButton(btnOptions.activeBtn())\n        else setDisplayedButton(btnOptions.defaultBtn())\n\n    }, [selectedValues])\n\n    const handlePwTextChange = () => { }\n\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"justify-content-center\">\n                <Col xs={11} md={6} className=\"shadow border-orange p-3\" >\n\n                    <Row>\n                        <Col>\n                            <h2>Password Generator</h2>\n                            <ol>\n                                <li><p>select characters</p></li>\n                                <li><p>select length</p></li>\n                                <li><p>click generate</p></li>\n                            </ol>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"border mx-1\">\n                        <Col>\n                            <Form className='mb-3'>\n                                <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                                    {Array.from(Object.entries(checkBox)).map((key) => {\n                                        const { id, type, label, checked } = key[1]\n                                        return < Form.Check\n                                            className=\"mb-1\"\n                                            key={id}\n                                            type={type}\n                                            id={id}\n                                            label={label}\n                                            checked={checked}\n                                            onChange={handleCheckboxChange}\n                                        />\n                                    })}\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>length: {pwLength.value}</Form.Label>\n                                    <Form.Range\n                                        min={pwLength.min}\n                                        max={pwLength.max}\n                                        value={pwLength.value}\n                                        onChange={handleRangeChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Control\n                                        className=\"text-center\"\n                                        as=\"textarea\"\n                                        rows={textAreaRows}\n                                        size=\"sm\"\n                                        value={pwText}\n                                        onChange={handlePwTextChange}\n                                        // disabled\n                                        style={{ resize: \"none\" }}\n                                    />\n                                </Form.Group>\n\n                                {displayedButton}\n\n                            </Form>\n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        </Container >\n    )\n}\n","import React, { useState, createContext } from 'react'\nimport { Keychain, Home, PasswordGenerator } from '../Pages'\n\nexport const AppContext = createContext()\n\nexport const AppProvider = ({ children }) => {\n\n    const defaultComponent = <Home key=\"Home\" />\n    const [AppComponent, setAppComponent] = useState(defaultComponent)\n\n    const updateAppComponent = (componentName) => {\n        // slight delay just for fun / feel\n        setTimeout(() => {\n            switch (componentName) {\n                case 'Home': setAppComponent(<Home key={componentName} />)\n                    break;\n\n                case 'PasswordGenerator': setAppComponent(<PasswordGenerator key={componentName} />)\n                    break;\n\n                case 'Keychain': setAppComponent(<Keychain key={componentName} />)\n                    break;\n\n                default: setAppComponent(defaultComponent)\n                    break;\n            }\n        }, 100);\n    }\n\n    return (\n        <AppContext.Provider value={{ AppComponent, updateAppComponent }}>\n            {children}\n        </AppContext.Provider>\n    )\n}","import React, { useContext, useEffect } from 'react'\nimport { AES, enc } from 'crypto-js';\nimport { Row, Col, Button } from 'react-bootstrap'\nimport { HomeContext } from '../../Context'\nimport { getExistingChains, getUserPassword, setLocalStorage } from '../../Utilty';\n\nexport default function DefaultLayout() {\n    const { updateHomeComponent } = useContext(HomeContext)\n\n    const loadRecoveryIfNeeded = () => {\n        const recovery = new URLSearchParams(window.location.search).get('recovery')?.split('cryptoKeychain')\n        if (!recovery?.length) return\n        const recoveryName = recovery[0]\n\n        // + characters show up as spaces\n        const recoveryHash = recovery[1].split(' ').join('+')\n\n        const confirmRecovery = window.confirm(`recover keychain ${recoveryName}?`)\n        if (!confirmRecovery) return window.location.href = '/crypto-keychain'\n\n        let pw\n        let decryptedData\n        const getPw = () => {\n            pw = getUserPassword();\n            if (pw === null) return null;\n            if (!pw) return getPw();\n\n            try {\n                // check if data is recovered, meaning password is valid\n                const bytes = AES.decrypt(recoveryHash, pw);\n                decryptedData = JSON.parse(bytes.toString(enc.Utf8));\n\n            } catch (error) {\n                alert('unauthorized');\n                return getPw();\n            }\n        };\n\n        getPw();\n\n        // eliminate overwriting an existing keychain\n        let name = recoveryName\n        if (getExistingChains().indexOf(recoveryName) !== -1) name += '-copy'\n\n        setLocalStorage(name, pw, decryptedData)\n        window.location.href = '/crypto-keychain'\n\n    };\n\n    useEffect(() => {\n        loadRecoveryIfNeeded()\n    }, [])\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"shadow border-orange p-3\">\n                <Row >\n                    <Col >\n                        <h1>Welcome!</h1>\n                        <ul>\n                            <li><p>improve your digital security</p></li>\n                            <li><p>create new passwords or access keys</p></li>\n                            <li><p>add existing passwords or keys</p></li>\n                            <li><p>keep them safe in an encrypted keychain</p></li>\n                        </ul>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n                        <Button\n                            variant=\"outline-warning text-dark\"\n                            className=\"w-100 my-3\"\n                            onClick={() => updateHomeComponent('createChain')}\n                        >\n                            create new chain\n                        </Button>\n                        <Button\n                            variant=\"outline-warning text-dark\"\n                            className=\"w-100 my-3\"\n                            onClick={() => updateHomeComponent('accessExistingChain')}\n                        >\n                            access existing chain\n                        </Button>\n                        <Button disabled variant=\"outline-warning text-dark\" className=\"w-100 my-3\">load from backup</Button>\n                    </Col>\n                </Row>\n            </Col >\n        </Row >\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { AppContext, HomeContext, KeychainContext } from '../../Context'\nimport { getExistingChains, setLocalStorage } from '../../Utilty'\n\nexport default function CreateChain() {\n\n    const [existingChains] = useState(getExistingChains())\n    const { updateAppComponent } = useContext(AppContext)\n    const { setKeychainData } = useContext(KeychainContext)\n    const { updateHomeComponent } = useContext(HomeContext)\n    const [errorMessage, setErrorMessage] = useState({\n        name: '',\n        pwlength: '',\n        pwmatch: ''\n    })\n\n    const [formInputs, setFormInputs] = useState({\n        name: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const [validFormInputs, setValidFormInputs] = useState(false)\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setFormInputs({ ...formInputs, [name]: value })\n    }\n\n    const handleCreateChain = () => {\n        const { name, password } = formInputs\n        setKeychainData({ name, items: [] })\n        setLocalStorage(name, password, [])\n\n        updateAppComponent('keychain')\n    }\n\n    useEffect(() => {\n        const { name, password, confirmPassword } = formInputs\n        if (!password || !confirmPassword) return\n\n        if (!name) {\n            // no name entered\n            setErrorMessage({ name: 'please enter a name', pwlength: '', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n        if (existingChains.indexOf(name) !== -1) {\n            // name is not unique\n            setErrorMessage({ name: 'please enter a unique name', pwlength: '', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n\n        if (password.length < 8) {\n            setErrorMessage({ ...errorMessage, name: '', pwlength: 'must be atleast 8 characters long', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n        if (password !== confirmPassword) {\n            // passwords do not match\n            setErrorMessage({ name: '', pwlength: '', pwmatch: 'passwords must match' })\n            setValidFormInputs(false)\n            return\n        }\n        setErrorMessage({ name: '', pwlength: '', pwmatch: '' })\n        setValidFormInputs(true)\n\n    }, [formInputs])\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"border-orange shadow p-4\">\n                <Row >\n                    <Col  >\n                        <h1>Add new chain</h1>\n                        <ol>\n                            <li><p >enter a name</p></li>\n                            <li><p >enter a password</p></li>\n                            <li><p>click create</p></li>\n                        </ol>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"border px-0 mx-2\">\n                        <Form className=\"mt-3 mx-3\">\n\n                            <Form.Group className=\"mb-3\" controlId=\"keychainName\">\n                                <Form.Label>keychain name: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.name}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"input\"\n                                    name=\"name\"\n                                    value={formInputs.name}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"keychainPassword\">\n                                <Form.Label>password: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.pwlength}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={formInputs.password}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"kychainConfirmPassword\">\n                                <Form.Label>confirm password: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.pwmatch}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    value={formInputs.confirmPassword}\n                                    onChange={(handleInputChange)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"d-flex justify-content-between\">\n                                <Button\n                                    variant=\"outline-dark\"\n                                    className=\"my-3\"\n                                    onClick={() => updateHomeComponent('DefaultLayout')}\n                                >\n                                    back\n                                </Button>\n\n                                {validFormInputs\n                                    ? <Button\n                                        variant=\"outline-warning text-dark\"\n                                        className=\"my-3\"\n                                        onClick={handleCreateChain}\n                                    >\n                                        create\n                                    </Button>\n                                    : <Button\n                                        disabled\n                                        variant=\"outline-warning text-dark\"\n                                        className=\"my-3\"\n                                    >\n                                        create\n                                    </Button>\n                                }\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n\n            </Col>\n        </Row>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Col, Row, Button } from 'react-bootstrap'\nimport { AppContext, KeychainContext } from '../../Context'\nimport { getExistingChains, getLocalStorageDecrypted, getUserPassword } from '../../Utilty'\n\nexport default function AccessExistingChain() {\n\n    const [existingChains] = useState(getExistingChains())\n    const { updateAppComponent } = useContext(AppContext)\n    const { setKeychainData } = useContext(KeychainContext)\n\n    const handleAccessChain = (keychainName) => {\n\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) handleAccessChain(keychainName)\n\n        const data = getLocalStorageDecrypted(keychainName, pw)\n        // if data is undefined, password was wrong\n        if (!data) return\n\n        setKeychainData({ name: keychainName, items: data })\n        updateAppComponent('Keychain')\n    }\n\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"border-orange shadow p-4\">\n                <Row >\n                    <Col  >\n                        <h1>Access a chain</h1>\n                        <ol>\n                            <li><p >select a chain</p></li>\n                            <li><p >enter password</p></li>\n                        </ol>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n\n                        {existingChains.length\n                            ? existingChains.map((chain, idx) => <Button\n                                variant=\"outline-warning text-dark\"\n                                className=\"w-100 my-3\"\n                                name={chain}\n                                key={idx}\n                                onClick={(e) => handleAccessChain(e.target.name)}\n                            >\n                                {chain}\n                            </Button>\n                            )\n                            : <p>no chains created</p>\n                        }\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n                        <Button\n                            variant=\"outline-dark\"\n                            className=\"my-3\"\n                            onClick={() => updateAppComponent('Home')}\n                        >\n                            back\n                        </Button>\n                    </Col>\n                </Row>\n\n            </Col>\n        </Row>\n\n    )\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { AppContext } from '.'\nimport { DefaultLayout, CreateChainForm, AccessExistingChain } from '../Components/HomePageItems'\n\nexport const HomeContext = createContext()\n\nexport const HomeProvider = ({ children }) => {\n\n    const { AppComponent } = useContext(AppContext)\n    const [defaultKey] = useState('DefaultLayout')\n    const [HomeComponent, setHomeComponent] = useState(<DefaultLayout key={`Home-${defaultKey}`} />)\n\n    useEffect(() => {\n        if (AppComponent.key === 'Home') updateHomeComponent(defaultKey)\n    }, [AppComponent, defaultKey])\n\n    const updateHomeComponent = (componentName) => {\n        switch (componentName) {\n            case defaultKey:\n                setHomeComponent(<DefaultLayout key={`Home-${componentName}`} />)\n                break;\n\n            case 'createChain':\n                setHomeComponent(<CreateChainForm key={componentName} />)\n                break;\n\n            case 'accessExistingChain':\n                setHomeComponent(<AccessExistingChain key={componentName} />)\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    return (\n        <HomeContext.Provider value={{ HomeComponent, updateHomeComponent }}>\n            {children}\n        </HomeContext.Provider>\n    )\n}\n","import React, { createContext, useState } from 'react';\nimport { AddItemForm } from '../Components/KeychainPageItems';\nimport { getLocalStorageDecrypted, getUserPassword, setLocalStorage } from '../Utilty';\n\nconst defaultKeychainData = { name: '', items: [] }\n\nexport const KeychainContext = createContext()\n\nexport const KeychainProvider = ({ children }) => {\n\n    const [displayForm, setDisplayForm] = useState(false)\n    const [KeychainComponent, setKeychainComponent] = useState()\n    const [keychainData, setKeychainData] = useState(defaultKeychainData)\n    const resetKeychainData = () => setKeychainData(defaultKeychainData)\n\n    const deleteKeychainItem = (name, id) => {\n        let pw\n        while (!pw) {\n            pw = getUserPassword()\n            // when user clicks cancel\n            if (pw === null) return\n            // we'll get data back for this chain if password is correct\n            if (!getLocalStorageDecrypted(keychainData.name, pw)) pw = ''\n        }\n\n        // final confirmation before delete\n        if (!window.confirm(`deleting ${name} from ${keychainData.name}, are you sure?`)) return\n\n        const filtered = keychainData.items.filter(item => item.id !== id)\n        setLocalStorage(keychainData.name, pw, filtered)\n        setKeychainData({ ...keychainData, items: filtered })\n    }\n\n    const updateKeychainComponent = (componentName) => {\n        switch (componentName) {\n            case 'addKeychainItemForm':\n                setKeychainComponent(<AddItemForm key={componentName} />)\n                setDisplayForm(true)\n                break;\n\n            default:\n                setKeychainComponent(null)\n                setDisplayForm(false)\n                break;\n        }\n    }\n\n    return (\n        <KeychainContext.Provider value={{\n            KeychainComponent,\n            updateKeychainComponent,\n\n            displayForm,\n            setDisplayForm,\n\n            resetKeychainData,\n            deleteKeychainItem,\n            setKeychainData,\n            keychainData\n        }}>\n            {children}\n        </KeychainContext.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { AppContext, KeychainContext } from '../../Context';\n\nexport default function NavTabs() {\n\n    const [key, setKey] = useState('Home');\n    const [keychainTab, setKeychainTab] = useState()\n    const { updateAppComponent } = useContext(AppContext)\n    const { keychainData } = useContext(KeychainContext)\n    // const keyBase = 'cryptoKC';\n\n    const handleUpdateKey = (key) => {\n        setKey(key)\n        updateAppComponent(key)\n    }\n\n    useEffect(() => {\n        const { name } = keychainData\n        if (!name) return setKeychainTab()\n        setKeychainTab(<Tab eventKey=\"Keychain\" title={name} />)\n        handleUpdateKey('Keychain')\n\n    }, [keychainData])\n\n    return (\n        <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(key) => handleUpdateKey(key)}\n            className=\" justify-content-end\"\n        >\n            <Tab eventKey=\"Home\" title=\"Home\" />\n            <Tab eventKey=\"PasswordGenerator\" title=\"password gen\" />\n            {keychainTab}\n        </Tabs>\n    );\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport NavTabs from './NavTabs'\n\n\nexport default function CustomNav() {\n    return (\n        <nav className=\"w-100 mb-5\">\n            <Container fluid>\n                <Row className=\"d-flex justify-content-between align-items-end \">\n                    <Col sx={12} sm={4}>\n                        <h1 id=\"title\" className=\"my-2 fs-6\">crypto <span className=\"fs-1\">\n                            <span className=\"text-decoration-underline\">key</span>chain</span>\n                        </h1>\n                    </Col>\n                    <Col sx={12} sm={8}>\n                        <NavTabs />\n                    </Col>\n                </Row>\n            </Container>\n        </nav>\n    )\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <h6 id=\"signature\">_samuel fox <small>2021</small></h6>\n    )\n}\n","// import logo from './logo.svg';\nimport React, { useContext } from 'react'\nimport { AppContext, HomeProvider, KeychainProvider } from '../../Context/'\nimport CustomNav from '../CustomNav'\nimport Footer from '../Footer';\nimport './App.css';\n\nfunction App() {\n    const { AppComponent } = useContext(AppContext)\n\n    return (\n        <>\n            <KeychainProvider>\n                <CustomNav />\n                <HomeProvider>\n\n                    {AppComponent}\n\n                </HomeProvider>\n                <Footer />\n            </KeychainProvider>\n        </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { AppProvider } from './Context';\nimport { App } from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './Components/App/App.scss';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}