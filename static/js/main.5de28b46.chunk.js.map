{"version":3,"sources":["Pages/Home/index.js","Utilty/GeneratePassword/index.js","Components/PasswordGenerator/index.js","Context/PageContext/index.js","Components/NavTabs/index.js","Components/CustomNav/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","console","log","Container","className","Row","Col","xs","md","Button","disabled","variant","options","number","special","lowercase","uppercase","generatePasswordString","values","length","str","includedTypes","randomNum","len","Math","floor","random","i","randomKey","indexOf","push","generatePassword","config","PasswordGenerator","useState","min","max","value","pwLength","setPwLength","textAreaRows","setTextAreaRows","pwText","setPwText","selectedValues","setSelectedValues","id","type","label","checked","checkBox","setCheckBox","handleCheckboxChange","e","target","useEffect","checkedBoxes","Object","entries","box","Form","Group","controlId","Array","from","map","key","Check","onChange","Label","Range","calculatedRows","Control","as","rows","size","placeholder","style","resize","onClick","PageContext","createContext","PageProvider","children","page","setPage","Provider","updatePage","pageName","NavTabs","setKey","dynamicTabs","useContext","keyBase","localStorage","setItem","Tabs","activeKey","onSelect","handleUpdateKey","Tab","eventKey","title","CustomNav","fluid","sx","sm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5de28b46.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\n\nexport default function Home() {\n\n    console.log('rendering: Home')\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"justify-content-center\">\n                <Col xs={10} md={4} >\n                    <h1>Welcome!</h1>\n                    <ul>\n                        <li><p>improve your digital security</p></li>\n                        <li><p>create new passwords or access keys</p></li>\n                        <li><p>add existing passwords or keys</p></li>\n                        <li><p>keep them safe in an encrypted keychain</p></li>\n                    </ul>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center mb-5\" >\n                <Col xs={10} md={4} className=\"border-orange\">\n                    <Button disabled variant=\"outline-info text-dark\" className=\"w-100 my-3\">create new chain</Button>\n                    <Button disabled variant=\"outline-info text-dark\" className=\"w-100 my-3\">access existing chain</Button>\n                    <Button disabled variant=\"outline-info text-dark\" className=\"w-100 my-3\">load from backup</Button>\n                </Col>\n            </Row>\n            <h2 className=\"text-center\">new features coming soon</h2>\n            <h6 className=\"text-center\">(checkout the password generator!)</h6>\n\n        </Container >\n    )\n}\n","const options = {\n    number: '0123456789',\n    special: `!#$%&*+-/;<=>?@^_'|~\\\\`,\n    lowercase: 'abcdefghijklmnopqrstuvwxyz',\n    uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ`\n};\n\n\nconst generatePasswordString = ({ values, length }) => {\n    let str = '';\n    let includedTypes = [];\n\n    const randomNum = (len) => Math.floor(Math.random() * len);\n\n    for (let i = 0; i < length; i++) {\n        const randomKey = values[randomNum(values.length)];\n        str += options[randomKey][randomNum(options[randomKey].length)];\n        if (includedTypes.indexOf(randomKey) === -1) includedTypes.push(randomKey);\n    };\n\n    if (includedTypes.length === values.length) return str;\n\n    return generatePasswordString({ values, length });\n}\n\n// export const focusAndCopyToCb = (el) => {\n//     const textVal = el.text().trim()\n//     if (!textVal) return\n//     el.select() && el.focus();\n//     copyToCb(textVal)\n// };\n\n// export const copyToCb = (text) => {\n//     navigator.clipboard.writeText(text)\n//         .then(() => { });\n// }\n\n\nexport const generatePassword = (config) => (\n    // validate there are selected values & a password length before calling\n    config.values.length\n    && config.length\n    && generatePasswordString(config)\n);","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { generatePassword } from '../../Utilty/GeneratePassword'\n\nexport default function PasswordGenerator() {\n\n    const rangeDefault = 128\n    const [pwLength, setPwLength] = useState({\n        min: 8,\n        max: 128,\n        value: rangeDefault\n    })\n    const [textAreaRows, setTextAreaRows] = useState(7)\n    const [pwText, setPwText] = useState('')\n    const [selectedValues, setSelectedValues] = useState([])\n    const [checkBox, setCheckBox] = useState({\n        number: {\n            id: 'number',\n            type: 'checkbox',\n            label: 'numbers',\n            checked: true\n        },\n        special: {\n            id: 'special',\n            type: 'checkbox',\n            label: 'special characters',\n            checked: true\n        },\n        lowercase: {\n            id: 'lowercase',\n            type: 'checkbox',\n            label: 'letters - lowercase',\n            checked: true\n        },\n        uppercase: {\n            id: 'uppercase',\n            type: 'checkbox',\n            label: 'letters - uppercase',\n            checked: true\n        }\n    })\n\n    const handleCheckboxChange = (e) => {\n        const { id, checked } = e.target\n        setCheckBox({\n            ...checkBox,\n            [id]: {\n                ...checkBox[id],\n                checked\n            }\n        })\n    }\n\n    const handleRangeChange = (e) => {\n        const { value } = e.target\n        setPwLength({ ...pwLength, value })\n        /* on a mobile device, the textarea needs to be:\n            - minimum 1 row tall\n            - 7 rows tall if 128 is selected\n            128/7 ≈ 18\n        */\n        const calculatedRows = Math.floor(value / 18)\n        setTextAreaRows(calculatedRows || 1)\n    }\n\n    const handleGeneratePassword = () => {\n        const config = {\n            values: selectedValues,\n            length: pwLength.value\n        };\n        setPwText(generatePassword(config))\n    }\n\n    useEffect(() => {\n        const checkedBoxes = []\n        for (const [_, box] of Object.entries(checkBox)) {\n            box.checked && checkedBoxes.push(box.id);\n        };\n        setSelectedValues(checkedBoxes)\n    }, [checkBox])\n\n\n    console.log('rendering: passwordGenerator')\n\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"justify-content-center\">\n                <Col xs={10} md={4} >\n                    <h1>Welcome!</h1>\n                    <ul>\n                        <li><p>improve your digital security</p></li>\n                        <li><p>create new passwords or access keys</p></li>\n                        <li><p>add existing passwords or keys</p></li>\n                        <li><p>keep them safe in an encrypted keychain</p></li>\n                    </ul>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center\" >\n                <Col xs={10} md={4} className=\"border-orange\">\n                    <Form className='mb-3'>\n                        <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                            {Array.from(Object.entries(checkBox)).map((key) => {\n                                const { id, type, label, checked } = key[1]\n                                return < Form.Check\n                                    className=\"mb-1\"\n                                    key={id}\n                                    type={type}\n                                    id={id}\n                                    label={label}\n                                    checked={checked}\n                                    onChange={handleCheckboxChange}\n                                />\n                            })}\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>length: {pwLength.value}</Form.Label>\n                            <Form.Range\n                                min={pwLength.min}\n                                max={pwLength.max}\n                                value={pwLength.value}\n                                onChange={handleRangeChange}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Control\n                                className=\"text-center\"\n                                as=\"textarea\"\n                                rows={textAreaRows}\n                                size=\"sm\"\n                                placeholder={pwText}\n                                disabled\n                                style={{ resize: \"none\" }}\n                            />\n                        </Form.Group>\n\n                        {selectedValues.length\n                            ? < Button\n                                variant=\"outline-info text-dark\"\n                                className=\"w-100 my-3\"\n                                onClick={handleGeneratePassword}\n\n                            >\n                                generate password\n                            </Button>\n                            : <Button\n                                variant=\"outline-info text-dark\"\n                                className=\"w-100 my-3\"\n                                disabled\n                            >\n                                generate password\n                            </Button>\n                        }\n                    </Form>\n                </Col>\n            </Row>\n        </Container >\n    )\n}\n","import React, { useState, createContext } from 'react'\nimport Home from '../../Pages/Home'\nimport PasswordGenerator from '../../Components/PasswordGenerator'\n\nexport const PageContext = createContext()\n\nexport default function PageProvider({ children }) {\n\n    const [page, setPage] = useState(<Home key=\"home\" />)\n\n    const updatePage = (pageName) => {\n        switch (pageName) {\n            case 'home':\n                setPage(<Home key={pageName} />)\n                break;\n\n            case 'passwordGenerator':\n                setPage(<PasswordGenerator key={pageName} />)\n                break;\n\n            default:\n                setPage(<Home key={pageName} />)\n                break;\n        }\n    }\n    console.log('rendering: PageProvider')\n\n\n    return (\n        <PageContext.Provider value={{ page, updatePage }}>\n            {children}\n        </PageContext.Provider>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { PageContext } from '../../Context/PageContext';\n\nexport default function NavTabs() {\n\n    const [key, setKey] = useState('home');\n    const [dynamicTabs, setDynamicTabs] = useState([])\n    const { updatePage } = useContext(PageContext)\n    const keyBase = 'cryptoKC';\n\n    const handleUpdateKey = (key) => {\n        setKey(key)\n        updatePage(key)\n    }\n\n    const loopThroughChains = (cb) => {\n        for (const [key] of Object.entries(localStorage)) {\n            // format each name by removing the 'keyBase-' text\n            const k = key.split('-');\n            if (k[0] !== keyBase) continue\n            k.shift();\n            const name = k.join(' ')\n            cb(name);\n\n        };\n    };\n\n    const displaySavedChains = () => {\n        const cb = (name) => {\n            setDynamicTabs((tabs) => [\n                ...tabs,\n                <Tab eventKey={name} title={name} key={name} >\n                    {/* <h1 className=\"d-block\">{name}</h1> */}\n                </Tab>\n            ])\n        };\n\n        loopThroughChains(cb);\n    };\n\n    useEffect(() => {\n        const testKeys = ['one', 'two']\n        testKeys.map(key => localStorage.setItem(`${keyBase}-${key}`, `data-${key}`))\n        // displaySavedChains();\n    }, [])\n\n    return (\n        <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(key) => handleUpdateKey(key)}\n            className=\" justify-content-end\"\n        >\n            <Tab eventKey=\"home\" title=\"Home\" />\n            <Tab eventKey=\"passwordGenerator\" title=\"password gen\" />\n            {dynamicTabs}\n        </Tabs>\n    );\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport NavTabs from '../NavTabs'\n\n\nexport default function CustomNav() {\n    return (\n        <nav className=\"w-100 mb-5\">\n            <Container fluid>\n                <Row className=\"d-flex justify-content-between align-items-end \">\n                    <Col sx={12} sm={4}>\n                        <h1 id=\"title\" className=\"my-2 fs-6\">crypto <span className=\"fs-1\">\n                            <span className=\"text-decoration-underline\">key</span>chain</span>\n                        </h1>\n                    </Col>\n                    <Col sx={12} sm={8}>\n                        <NavTabs />\n                    </Col>\n                </Row>\n            </Container>\n        </nav>\n    )\n}\n","// import logo from './logo.svg';\nimport React, { useContext } from 'react'\nimport { PageContext } from './Context/PageContext'\nimport CustomNav from './Components/CustomNav'\nimport './App.css';\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n\n  const { page } = useContext(PageContext)\n  console.log('rendering: App')\n  return (\n    <>\n      <CustomNav />\n      <Container className=\"pb-1\">\n        {page}\n      </Container>\n      <h6 id=\"signature\">_samuel fox <small>2021</small></h6>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport PageProvider from './Context/PageContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PageProvider>\n      <App />\n    </PageProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}