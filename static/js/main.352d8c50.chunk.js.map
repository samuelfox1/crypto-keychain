{"version":3,"sources":["Pages/Home.js","Utilty/createPassword.js","Utilty/getUserPassword.js","Utilty/config.js","Utilty/getExistingChains.js","Utilty/LocalStorage/getLocalStorage.js","Utilty/LocalStorage/setLocalStorage.js","Components/KeychainPageItems/AddItemForm.js","Components/KeychainPageItems/KeychainItem.js","Utilty/copyToClipboard.js","Pages/Keychain.js","Pages/PasswordGenerator.js","Context/App.js","Components/HomePageItems/DefaultLayout.js","Components/HomePageItems/CreateChainForm.js","Components/HomePageItems/AccessExistingChain.js","Context/Home.js","Context/Keychain.js","Components/CustomNav/NavTabs.js","Components/CustomNav/index.js","Components/Footer/index.js","Components/App/index.js","reportWebVitals.js","index.js"],"names":["Home","HomeComponent","useContext","HomeContext","console","log","Container","className","options","number","special","lowercase","uppercase","generatePasswordString","values","length","str","includedTypes","randomNum","len","Math","floor","random","i","randomKey","indexOf","push","defaultConfig","createPassword","config","getUserPassword","prompt","keyBase","getExistingChains","keychainNames","Object","entries","localStorage","k","split","shift","join","getLocalStorage","keychainName","pw","existingData","getItem","bytes","AES","decrypt","JSON","parse","toString","enc","Utf8","error","alert","setLocalStorage","arr","setItem","encrypt","stringify","AddItemForm","useState","validInputs","setValidInputs","KeychainContext","keychainData","setKeychainData","updateKeychainComponent","name","value","id","uuid","inputs","setInputs","handleInputChange","e","target","useEffect","Row","Col","Form","onSubmit","handleAddKeychainItem","preventDefault","updatedArr","items","Group","controlId","Label","Control","type","onChange","as","rows","size","style","resize","Button","variant","onClick","disabled","KeychainItem","viewKeychainItem","setViewKeychainItem","copiedMessage","setCopiedMessage","deleteKeychainItem","handleViewKeychainItemValue","handleCopyToClipboard","navigator","clipboard","writeText","then","copyToClipboard","Keychain","KeychainComponent","displayForm","displayChainOptions","setDisplayChainOptions","xs","md","map","PasswordGenerator","textAreaRows","setTextAreaRows","min","max","pwLength","setPwLength","pwText","setPwText","selectedValues","setSelectedValues","label","checked","checkBox","setCheckBox","btnOptions","handleGeneratePassword","Spinner","animation","role","displayedButton","setDisplayedButton","handleCheckboxChange","interval","setInterval","setTimeout","clearInterval","checkedBoxes","box","Array","from","key","Check","Range","calculatedRows","AppContext","createContext","AppProvider","children","defaultComponent","AppComponent","setAppComponent","Provider","updateAppComponent","componentName","DefaultLayout","updateHomeComponent","CreateChain","existingChains","pwlength","pwmatch","errorMessage","setErrorMessage","password","confirmPassword","formInputs","setFormInputs","validFormInputs","setValidFormInputs","AccessExistingChain","handleAccessChain","data","chain","idx","HomeProvider","defaultKey","setHomeComponent","KeychainProvider","setDisplayForm","setKeychainComponent","clearKeychainData","window","confirm","filtered","filter","item","NavTabs","setKey","keychainTab","setKeychainTab","handleUpdateKey","Tab","eventKey","title","Tabs","activeKey","onSelect","CustomNav","fluid","sx","sm","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.352d8c50.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { HomeContext } from '../Context'\n// import { getUserPassword } from '../Utilty'\n\nexport default function Home() {\n\n    const { HomeComponent } = useContext(HomeContext)\n\n    console.log('rendering: Home')\n\n    return (\n        <Container className=\"my-5\">\n            {HomeComponent}\n            {/* <Row className=\"mt-2 text-center\">\n                <h4> new features coming soon</h4>\n                <h6><small>~ checkout the password generator!</small></h6>\n            </Row> */}\n        </Container >\n    )\n}\n","const options = {\n    number: '0123456789',\n    special: `!#$%&*+-/;<=>?@^_'|~\\\\`,\n    lowercase: 'abcdefghijklmnopqrstuvwxyz',\n    uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ`\n};\n\n\nconst generatePasswordString = ({ values, length }) => {\n    let str = '';\n    let includedTypes = [];\n\n    const randomNum = (len) => Math.floor(Math.random() * len);\n\n    for (let i = 0; i < length; i++) {\n        const randomKey = values[randomNum(values.length)];\n        str += options[randomKey][randomNum(options[randomKey].length)];\n        if (includedTypes.indexOf(randomKey) === -1) includedTypes.push(randomKey);\n    };\n\n    if (includedTypes.length === values.length) return str;\n\n    return generatePasswordString({ values, length });\n}\n\nconst defaultConfig = {\n    values: [\n        \"number\",\n        \"special\",\n        \"lowercase\",\n        \"uppercase\"\n    ],\n    length: 128\n}\n\nexport const createPassword = (config = defaultConfig) => (\n    // validate there are selected values & a password length before calling\n    config.values.length\n    && config.length\n    && generatePasswordString(config)\n);","export const getUserPassword = () => prompt('keychain access password');\n","export const keyBase = 'cryptoKC';\n","import { keyBase } from './config'\n\nexport const getExistingChains = () => {\n    const keychainNames = [];\n    for (const [key] of Object.entries(localStorage)) {\n        // format each name by removing the 'keyBase-' text\n        const k = key.split('-');\n        if (k[0] !== keyBase) continue;\n        k.shift();\n        keychainNames.push(k.join('-'));\n    };\n    return keychainNames;\n};","import { AES, enc, } from \"crypto-js/\";\n\nimport { keyBase } from '../config'\n\nexport const getLocalStorage = (keychainName, pw) => {\n    if (!keychainName) return console.log('no chain name selected');\n\n    const existingData = localStorage.getItem(`${keyBase}-${keychainName}`);\n    if (!existingData) return console.log('missing chain data, please load from backup');\n\n    try {\n\n        const bytes = AES.decrypt(existingData, pw);\n        const decryptedData = JSON.parse(bytes.toString(enc.Utf8));\n        return decryptedData;\n\n    } catch (error) { alert('unauthorized') };\n};","import { AES } from \"crypto-js/\";\nimport { keyBase } from '../config'\n\nexport const setLocalStorage = (keychainName, pw, arr) => {\n    if (!keychainName || !pw) return\n    localStorage.setItem(`${keyBase}-${keychainName}`, AES.encrypt(JSON.stringify(arr), pw).toString())\n};","import React, { useContext, useEffect, useState } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { Col, Form, Row, Button } from 'react-bootstrap'\nimport { KeychainContext } from '../../Context'\nimport { createPassword, getUserPassword } from '../../Utilty'\nimport { getLocalStorage, setLocalStorage } from '../../Utilty'\n\nexport default function AddItemForm() {\n\n    const [validInputs, setValidInputs] = useState(false)\n    const { keychainData, setKeychainData, updateKeychainComponent } = useContext(KeychainContext)\n    const [inputs, setInputs] = useState({\n        name: '',\n        value: '',\n        id: uuid()\n    })\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setInputs({ ...inputs, [name]: value })\n    }\n\n    const handleSuggestPassword = () => {\n        setInputs({ ...inputs, value: createPassword() })\n    }\n\n    const handleAddKeychainItem = (e) => {\n        if (!e) return\n        e.preventDefault()\n        console.log(inputs)\n        const { name } = keychainData\n        console.log('here', name)\n\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) return handleAddKeychainItem()\n\n        const arr = getLocalStorage(name, pw)\n        console.log('here', arr)\n        if (!arr) return handleAddKeychainItem()\n        const updatedArr = [inputs, ...arr]\n        setLocalStorage(keychainData.name, pw, updatedArr)\n        setKeychainData({ ...keychainData, items: updatedArr })\n        setInputs({ name: '', value: '' })\n        updateKeychainComponent()\n    }\n\n    useEffect(() => {\n        if (!inputs.name || !inputs.value) return setValidInputs(false)\n        if (!validInputs) setValidInputs(true)\n    }, [inputs])\n\n    console.log('rendering addItemForm')\n\n    return (\n        <Row className=\"border shadow flex-column m-0 mb-3\">\n            <Col className=\"p-3\">\n                <h3 className=\"mb-1\">Add item</h3>\n                <Form onSubmit={handleAddKeychainItem}>\n\n                    <Form.Group className=\"mb-1\" controlId=\"keychainItemName\">\n                        <Form.Label className=\"mb-0\">name</Form.Label>\n                        <Form.Control type=\"text\" name='name' value={inputs.name} onChange={handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-1\" controlId=\"keychainItemValue\">\n                        <Form.Label className=\"mb-0\">value</Form.Label>\n                        <Form.Control\n                            className=\"text-center\"\n                            as=\"textarea\"\n                            rows={6}\n                            name='value'\n                            size=\"sm\"\n                            value={inputs.value}\n                            style={{ resize: \"none\" }}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"d-flex justify-content-end\">\n                        <Button className=\"p-0 px-1\" variant=\"outline-warning text-dark\" size=\"sm\" onClick={handleSuggestPassword}>\n                            suggest password?\n                        </Button>\n                    </Form.Group>\n\n                    <hr />\n                    <Form.Group className=\"d-flex justify-content-end pb-3\">\n                        {validInputs\n                            ? <Button\n                                type=\"submit\"\n                                variant=\"outline-warning text-dark\"\n                            >\n                                add item\n                            </Button>\n                            : <Button disabled variant=\"outline-warning text-dark\" >add item</Button>\n                        }\n                    </Form.Group>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Col, Row, Form } from 'react-bootstrap';\nimport { FaEye, FaEyeSlash, FaTrashAlt, FaCopy } from \"react-icons/fa\";\nimport { KeychainContext } from '../../Context';\nimport { copyToClipboard } from '../../Utilty';\n\n\nexport default function KeychainItem({ name, value, id }) {\n\n    const [viewKeychainItem, setViewKeychainItem] = useState(false)\n    const [copiedMessage, setCopiedMessage] = useState('')\n\n    const { deleteKeychainItem } = useContext(KeychainContext)\n\n    const handleViewKeychainItemValue = () => {\n        viewKeychainItem && setCopiedMessage(false)\n        setViewKeychainItem(!viewKeychainItem)\n    }\n\n    const handleCopyToClipboard = (value) => {\n        // if (copiedMessage) return\n\n        copyToClipboard(value)\n        setCopiedMessage('copied!')\n    }\n\n\n    return (\n        <Row className=\"border shadow-sm flex-column m-0 mb-3\">\n            <Col className=\"d-flex justify-content-between align-items-center py-1\">\n                <FaTrashAlt onClick={() => deleteKeychainItem(name, id)} />\n                <p>{name}</p>\n                {viewKeychainItem\n                    ? <FaEyeSlash onClick={handleViewKeychainItemValue} />\n                    : <FaEye onClick={handleViewKeychainItemValue} />\n                }\n            </Col>\n            <Col className=\"text-center p-0\">\n\n                {viewKeychainItem &&\n                    <Form>\n                        <Form.Group className=\"mx-2 mb-3\" controlId=\"keychainItemValue\">\n                            <Form.Control\n                                className=\"text-center\"\n                                as=\"textarea\"\n                                rows={6}\n                                name='value'\n                                size=\"sm\"\n                                value={value}\n                                disabled\n                                style={{ resize: \"none\" }}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"d-flex justify-content-end m-0\">\n                            {copiedMessage}\n                            <FaCopy\n                                className=\"m-2\"\n                                onClick={() => handleCopyToClipboard(value)}\n                            />\n                        </Form.Group>\n                    </Form>\n                }\n            </Col>\n        </Row>\n    )\n}\n","export const copyToClipboard = (value) => {\n\n    navigator.clipboard.writeText(value)\n        .then(() => console.log(value));\n}\n\n\n// export const focusAndCopyToCb = (el) => {\n//     const textVal = el.text().trim()\n//     if (!textVal) return\n//     el.select() && el.focus();\n//     copyToCb(textVal)\n// };","import React, { useContext, useState } from 'react'\nimport { FaConnectdevelop } from 'react-icons/fa'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport { KeychainItem } from '../Components/KeychainPageItems'\nimport { KeychainContext } from '../Context'\n\nexport default function Keychain() {\n\n\n    const { keychainData, KeychainComponent, updateKeychainComponent, displayForm } = useContext(KeychainContext)\n    const [displayChainOptions, setDisplayChainOptions] = useState(false)\n    const { name, items } = keychainData\n\n    const toggleDisplayForm = () => {\n        if (!displayForm) updateKeychainComponent('addKeychainItemForm')\n        else updateKeychainComponent()\n    }\n\n    const toggleDisplayChainOptions = () => {\n        setDisplayChainOptions(!displayChainOptions)\n    }\n\n    console.log('rendering: Keychain')\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col xs={11} md={6} className=\"shadow border-orange p-3\">\n\n                    <Row>\n                        <Col className=\"d-flex justify-content-between align-items-center py-2 border\">\n                            <h3 className=\"my-0\">{name}</h3>\n                            <FaConnectdevelop\n                                className=\"react-icons\"\n                                onClick={toggleDisplayChainOptions}\n                            />\n                        </Col>\n                    </Row>\n                    {displayChainOptions && <Row className=\"py-3 border\">\n                        <Col className=\" col-6 d-flex\">\n\n                            <h6>settings</h6>\n                        </Col>\n                        <Col className=\" col-6 text-end\">\n                            <Button\n                                className=\"mb-3\"\n                                variant=\"outline-warning text-dark\"\n                            >\n                                rename\n                            </Button>\n                            <Button\n                                className=\"\"\n                                variant=\"outline-danger text-dark\"\n                            >\n                                destroy\n                            </Button>\n                        </Col>\n                    </Row>}\n\n                    <Row className=\"justify-content-center my-3\" >\n                        <Col>\n                            {items.map(({ name, value, id }) => <KeychainItem key={id} id={id} name={name} value={value} />)}\n                            <hr />\n\n                            {KeychainComponent}\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"px-0\">\n                        <Col className=\"d-flex justify-content-end px-0\">\n                            <Button\n                                className=\"mb-3 mx-3\"\n                                variant=\"outline-warning text-dark\"\n                                onClick={toggleDisplayForm}\n                            >\n                                {displayForm ? 'cancel' : 'add item'}\n                            </Button>\n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Form, Button, Spinner } from 'react-bootstrap'\nimport { createPassword } from '../Utilty'\n\nexport default function PasswordGenerator() {\n\n    const [textAreaRows, setTextAreaRows] = useState(3)\n    const [pwLength, setPwLength] = useState({\n        min: 8,\n        max: 128,\n        value: 68\n    })\n    const [pwText, setPwText] = useState('')\n    const [selectedValues, setSelectedValues] = useState([])\n    const [checkBox, setCheckBox] = useState({\n        number: {\n            id: 'number',\n            type: 'checkbox',\n            label: 'numbers',\n            checked: true\n        },\n        special: {\n            id: 'special',\n            type: 'checkbox',\n            label: 'special characters',\n            checked: true\n        },\n        lowercase: {\n            id: 'lowercase',\n            type: 'checkbox',\n            label: 'letters - lowercase',\n            checked: true\n        },\n        uppercase: {\n            id: 'uppercase',\n            type: 'checkbox',\n            label: 'letters - uppercase',\n            checked: true\n        }\n    })\n    const btnOptions = {\n\n        defaultBtn: () => (\n            < Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                disabled\n            >\n                generate\n            </Button >\n        )\n        ,\n        activeBtn: () => (\n            < Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                onClick={handleGeneratePassword}\n            >\n                generate\n            </Button >\n        )\n        ,\n        loadingBtn: () => (\n            <Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                disabled\n            >\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n            </Button>\n        )\n\n    }\n\n    const [displayedButton, setDisplayedButton] = useState(btnOptions.defaultBtn())\n    const handleCheckboxChange = (e) => {\n        const { id, checked } = e.target\n        setPwText('')\n        setCheckBox({\n            ...checkBox,\n            [id]: {\n                ...checkBox[id],\n                checked\n            }\n        })\n    }\n\n    const handleRangeChange = (e) => {\n        const { value } = e.target\n        setPwText('')\n        setPwLength({ ...pwLength, value })\n        /* on a mobile device, the textarea needs to be:\n            - minimum 1 row tall\n            - 7 rows tall if 128 is selected\n            128/7 ≈ 18\n        */\n        const calculatedRows = Math.floor(value / 18)\n        setTextAreaRows(calculatedRows || 1)\n        setDisplayedButton(btnOptions.activeBtn())\n    }\n\n    const handleGeneratePassword = () => {\n\n        const config = {\n            values: selectedValues,\n            length: pwLength.value\n        };\n\n        setDisplayedButton(btnOptions.loadingBtn())\n\n        let interval = setInterval(() => setPwText(createPassword(config)), 100)\n\n        setTimeout(() => {\n            clearInterval(interval)\n            setDisplayedButton(btnOptions.activeBtn())\n        }, 2000)\n    }\n\n    useEffect(() => {\n        const checkedBoxes = []\n        for (const [_, box] of Object.entries(checkBox)) {\n            box.checked && checkedBoxes.push(box.id);\n        };\n        setSelectedValues(checkedBoxes)\n    }, [checkBox])\n\n    useEffect(() => {\n        if (selectedValues.length) setDisplayedButton(btnOptions.activeBtn())\n        else setDisplayedButton(btnOptions.defaultBtn())\n\n    }, [selectedValues])\n\n    const handlePwTextChange = () => { }\n\n    console.log('rendering: DefaultLayout')\n\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"justify-content-center\">\n                <Col xs={11} md={6} className=\"shadow border-orange p-3\" >\n\n                    <Row>\n                        <Col>\n                            <h2>Password Generator</h2>\n                            <ol>\n                                <li><p>select characters</p></li>\n                                <li><p>select length</p></li>\n                                <li><p>click generate</p></li>\n                            </ol>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"border mx-1\">\n                        <Col>\n                            <Form className='mb-3'>\n                                <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                                    {Array.from(Object.entries(checkBox)).map((key) => {\n                                        const { id, type, label, checked } = key[1]\n                                        return < Form.Check\n                                            className=\"mb-1\"\n                                            key={id}\n                                            type={type}\n                                            id={id}\n                                            label={label}\n                                            checked={checked}\n                                            onChange={handleCheckboxChange}\n                                        />\n                                    })}\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>length: {pwLength.value}</Form.Label>\n                                    <Form.Range\n                                        min={pwLength.min}\n                                        max={pwLength.max}\n                                        value={pwLength.value}\n                                        onChange={handleRangeChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Control\n                                        className=\"text-center\"\n                                        as=\"textarea\"\n                                        rows={textAreaRows}\n                                        size=\"sm\"\n                                        value={pwText}\n                                        onChange={handlePwTextChange}\n                                        // disabled\n                                        style={{ resize: \"none\" }}\n                                    />\n                                </Form.Group>\n\n                                {displayedButton}\n\n                            </Form>\n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        </Container >\n    )\n}\n","import React, { useState, createContext } from 'react'\nimport { Keychain, Home, PasswordGenerator } from '../Pages'\n\nexport const AppContext = createContext()\n\nexport const AppProvider = ({ children }) => {\n\n    const defaultComponent = <Home key=\"Home\" />\n    const [AppComponent, setAppComponent] = useState(defaultComponent)\n\n    const updateAppComponent = (componentName) => {\n        // slight delay just for fun / feel\n        setTimeout(() => {\n            switch (componentName) {\n                case 'Home': setAppComponent(<Home key={componentName} />)\n                    break;\n\n                case 'PasswordGenerator': setAppComponent(<PasswordGenerator key={componentName} />)\n                    break;\n\n                case 'Keychain': setAppComponent(<Keychain key={componentName} />)\n                    break;\n\n                default: setAppComponent(defaultComponent)\n                    break;\n            }\n        }, 100);\n    }\n\n    console.log('rendering: AppProvider')\n\n    return (\n        <AppContext.Provider value={{ AppComponent, updateAppComponent }}>\n            {children}\n        </AppContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport { HomeContext } from '../../Context'\n\nexport default function DefaultLayout() {\n    const { updateHomeComponent } = useContext(HomeContext)\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"shadow border-orange p-3\">\n                <Row >\n                    <Col >\n                        <h1>Welcome!</h1>\n                        <ul>\n                            <li><p>improve your digital security</p></li>\n                            <li><p>create new passwords or access keys</p></li>\n                            <li><p>add existing passwords or keys</p></li>\n                            <li><p>keep them safe in an encrypted keychain</p></li>\n                        </ul>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n                        <Button\n                            variant=\"outline-warning text-dark\"\n                            className=\"w-100 my-3\"\n                            onClick={() => updateHomeComponent('createChain')}\n                        >\n                            create new chain\n                        </Button>\n                        <Button\n                            variant=\"outline-warning text-dark\"\n                            className=\"w-100 my-3\"\n                            onClick={() => updateHomeComponent('accessExistingChain')}\n                        >\n                            access existing chain\n                        </Button>\n                        <Button disabled variant=\"outline-warning text-dark\" className=\"w-100 my-3\">load from backup</Button>\n                    </Col>\n                </Row>\n            </Col >\n        </Row >\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { AppContext, HomeContext, KeychainContext } from '../../Context'\nimport { getExistingChains, setLocalStorage } from '../../Utilty'\n\nexport default function CreateChain() {\n\n    const [existingChains] = useState(getExistingChains())\n    const { updateAppComponent } = useContext(AppContext)\n    const { setKeychainData } = useContext(KeychainContext)\n    const { updateHomeComponent } = useContext(HomeContext)\n    const [errorMessage, setErrorMessage] = useState({\n        name: '',\n        pwlength: '',\n        pwmatch: ''\n    })\n\n    const [formInputs, setFormInputs] = useState({\n        name: 'test-0',\n        password: 'password',\n        confirmPassword: 'password'\n    })\n\n    const [validFormInputs, setValidFormInputs] = useState(false)\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setFormInputs({ ...formInputs, [name]: value })\n    }\n\n    const handleCreateChain = () => {\n        const { name, password } = formInputs\n        setKeychainData({ name, items: [] })\n        setLocalStorage(name, password, [])\n\n        updateAppComponent('keychain')\n    }\n\n    useEffect(() => {\n        const { name, password, confirmPassword } = formInputs\n        if (!password || !confirmPassword) return\n\n        if (!name) {\n            // no name entered\n            setErrorMessage({ name: 'please enter a name', pwlength: '', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n        if (existingChains.indexOf(name) !== -1) {\n            // name is not unique\n            setErrorMessage({ name: 'please enter a unique name', pwlength: '', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n\n        if (password.length < 8) {\n            setErrorMessage({ ...errorMessage, name: '', pwlength: 'must be atleast 8 characters long', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n        if (password !== confirmPassword) {\n            // passwords do not match\n            setErrorMessage({ name: '', pwlength: '', pwmatch: 'passwords must match' })\n            setValidFormInputs(false)\n            return\n        }\n        setErrorMessage({ name: '', pwlength: '', pwmatch: '' })\n        setValidFormInputs(true)\n\n    }, [formInputs])\n\n    console.log('rendering: CreateChain')\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"border-orange shadow p-4\">\n                <Row >\n                    <Col  >\n                        <h1>Add new chain</h1>\n                        <ol>\n                            <li><p >enter a name</p></li>\n                            <li><p >enter a password</p></li>\n                            <li><p>click create</p></li>\n                        </ol>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"border px-0 mx-2\">\n                        <Form className=\"mt-3 mx-3\">\n\n                            <Form.Group className=\"mb-3\" controlId=\"keychainName\">\n                                <Form.Label>keychain name: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.name}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"input\"\n                                    name=\"name\"\n                                    value={formInputs.name}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"keychainPassword\">\n                                <Form.Label>password: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.pwlength}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={formInputs.password}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"kychainConfirmPassword\">\n                                <Form.Label>confirm password: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.pwmatch}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    value={formInputs.confirmPassword}\n                                    onChange={(handleInputChange)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"d-flex justify-content-between\">\n                                <Button\n                                    variant=\"outline-dark\"\n                                    className=\"my-3\"\n                                    onClick={() => updateHomeComponent('DefaultLayout')}\n                                >\n                                    back\n                                </Button>\n\n                                {validFormInputs\n                                    ? <Button\n                                        variant=\"outline-warning text-dark\"\n                                        className=\"my-3\"\n                                        onClick={handleCreateChain}\n                                    >\n                                        create\n                                    </Button>\n                                    : <Button\n                                        disabled\n                                        variant=\"outline-warning text-dark\"\n                                        className=\"my-3\"\n                                    >\n                                        create\n                                    </Button>\n                                }\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n\n            </Col>\n        </Row>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Col, Row, Button } from 'react-bootstrap'\nimport { AppContext, KeychainContext } from '../../Context'\nimport { getExistingChains, getLocalStorage, getUserPassword } from '../../Utilty'\n\nexport default function AccessExistingChain() {\n\n    const [existingChains] = useState(getExistingChains())\n    const { updateAppComponent } = useContext(AppContext)\n    const { setKeychainData } = useContext(KeychainContext)\n\n    const handleAccessChain = (keychainName) => {\n\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) handleAccessChain(keychainName)\n\n        const data = getLocalStorage(keychainName, pw)\n        // if data is undefined, password was wrong\n        if (!data) return\n\n        setKeychainData({ name: keychainName, items: data })\n        updateAppComponent('Keychain')\n    }\n\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"border-orange shadow p-4\">\n                <Row >\n                    <Col  >\n                        <h1>Access a chain</h1>\n                        <ol>\n                            <li><p >select a chain</p></li>\n                            <li><p >enter password</p></li>\n                        </ol>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n\n                        {existingChains.length\n                            ? existingChains.map((chain, idx) => <Button\n                                variant=\"outline-warning text-dark\"\n                                className=\"w-100 my-3\"\n                                name={chain}\n                                key={idx}\n                                onClick={(e) => handleAccessChain(e.target.name)}\n                            >\n                                {chain}\n                            </Button>\n                            )\n                            : <p>no chains created</p>\n                        }\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n                        <Button\n                            variant=\"outline-dark\"\n                            className=\"my-3\"\n                            onClick={() => updateAppComponent('Home')}\n                        >\n                            back\n                        </Button>\n                    </Col>\n                </Row>\n\n            </Col>\n        </Row>\n\n    )\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { AppContext } from '.'\nimport { DefaultLayout, CreateChainForm, AccessExistingChain } from '../Components/HomePageItems'\n\nexport const HomeContext = createContext()\n\nexport const HomeProvider = ({ children }) => {\n\n    const { AppComponent } = useContext(AppContext)\n    const [defaultKey] = useState('DefaultLayout')\n    const [HomeComponent, setHomeComponent] = useState(<DefaultLayout key={`Home-${defaultKey}`} />)\n\n    useEffect(() => {\n        if (AppComponent.key === 'Home') updateHomeComponent(defaultKey)\n    }, [AppComponent, defaultKey])\n\n    const updateHomeComponent = (componentName) => {\n        // setTimeout(() => {\n        switch (componentName) {\n            case defaultKey:\n                setHomeComponent(<DefaultLayout key={`Home-${componentName}`} />)\n                break;\n\n            case 'createChain':\n                setHomeComponent(<CreateChainForm key={componentName} />)\n                break;\n\n            case 'accessExistingChain':\n                setHomeComponent(<AccessExistingChain key={componentName} />)\n                break;\n\n            default:\n                break;\n        }\n        // }, 100)\n    }\n\n    console.log('rendering: HomeProvider')\n\n    return (\n        <HomeContext.Provider value={{ HomeComponent, updateHomeComponent }}>\n            {children}\n        </HomeContext.Provider>\n    )\n}\n","import React, { createContext, useState } from 'react';\nimport { AddItemForm } from '../Components/KeychainPageItems';\nimport { getLocalStorage, getUserPassword, setLocalStorage } from '../Utilty';\n\nexport const KeychainContext = createContext()\n\nexport const KeychainProvider = ({ children }) => {\n\n    const [displayForm, setDisplayForm] = useState(false)\n\n    const [KeychainComponent, setKeychainComponent] = useState()\n    const [keychainData, setKeychainData] = useState({\n        name: '',\n        items: []\n    })\n\n    const clearKeychainData = () => setKeychainData({ name: '', items: [] })\n\n    const deleteKeychainItem = (name, id) => {\n        let pw\n        while (!pw) {\n            pw = getUserPassword()\n            // when user clicks cancel\n            if (pw === null) return\n            // we'll get data back for this chain if password is correct\n            if (!getLocalStorage(keychainData.name, pw)) pw = ''\n        }\n\n        // final confirmation before delete\n        if (!window.confirm(`delete item: ${name} from keychain: ${keychainData.name}?`)) return\n\n        const filtered = keychainData.items.filter(item => item.id !== id)\n        setLocalStorage(keychainData.name, pw, filtered)\n        setKeychainData({ ...keychainData, items: filtered })\n    }\n\n    const updateKeychainComponent = (componentName) => {\n        switch (componentName) {\n            case 'addKeychainItemForm':\n                setKeychainComponent(<AddItemForm key={componentName} />)\n                setDisplayForm(true)\n                break;\n\n            default:\n                setKeychainComponent(null)\n                setDisplayForm(false)\n                break;\n        }\n    }\n\n    console.log('rendering: KeychainProvider')\n\n    return (\n        <KeychainContext.Provider value={{\n            KeychainComponent,\n            updateKeychainComponent,\n\n            displayForm,\n            setDisplayForm,\n\n            clearKeychainData,\n            deleteKeychainItem,\n            setKeychainData,\n            keychainData\n        }}>\n            {children}\n        </KeychainContext.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { AppContext, KeychainContext } from '../../Context';\n\nexport default function NavTabs() {\n\n    const [key, setKey] = useState('Home');\n    const [keychainTab, setKeychainTab] = useState()\n    const { updateAppComponent } = useContext(AppContext)\n    const { keychainData } = useContext(KeychainContext)\n    // const keyBase = 'cryptoKC';\n\n    const handleUpdateKey = (key) => {\n        setKey(key)\n        console.log(key)\n        updateAppComponent(key)\n    }\n\n    useEffect(() => {\n        const { name } = keychainData\n        if (!name) return setKeychainTab()\n        setKeychainTab(<Tab eventKey=\"Keychain\" title={name} />)\n        handleUpdateKey('Keychain')\n\n    }, [keychainData])\n\n    return (\n        <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(key) => handleUpdateKey(key)}\n            className=\" justify-content-end\"\n        >\n            <Tab eventKey=\"Home\" title=\"Home\" />\n            <Tab eventKey=\"PasswordGenerator\" title=\"password gen\" />\n            {keychainTab}\n        </Tabs>\n    );\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport NavTabs from './NavTabs'\n\n\nexport default function CustomNav() {\n    return (\n        <nav className=\"w-100 mb-5\">\n            <Container fluid>\n                <Row className=\"d-flex justify-content-between align-items-end \">\n                    <Col sx={12} sm={4}>\n                        <h1 id=\"title\" className=\"my-2 fs-6\">crypto <span className=\"fs-1\">\n                            <span className=\"text-decoration-underline\">key</span>chain</span>\n                        </h1>\n                    </Col>\n                    <Col sx={12} sm={8}>\n                        <NavTabs />\n                    </Col>\n                </Row>\n            </Container>\n        </nav>\n    )\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <h6 id=\"signature\">_samuel fox <small>2021</small></h6>\n    )\n}\n","// import logo from './logo.svg';\nimport React, { useContext } from 'react'\nimport { AppContext, HomeProvider, KeychainProvider } from '../../Context/'\nimport CustomNav from '../CustomNav'\nimport Footer from '../Footer';\nimport './App.css';\n\nfunction App() {\n  const { AppComponent } = useContext(AppContext)\n\n  console.log('rendering: App')\n\n  return (\n    <>\n      <KeychainProvider>\n        <CustomNav />\n        <HomeProvider>\n\n          {AppComponent}\n\n        </HomeProvider>\n        <Footer />\n      </KeychainProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { AppProvider } from './Context';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './Components/App/App.scss';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}