{"version":3,"sources":["Pages/Home.js","Utilty/createPassword.js","Utilty/createKeychain.js","Components/KeychainPageItems/AddItemForm.js","Components/KeychainPageItems/KeychainItem.js","Utilty/copyToClipboard.js","Pages/Keychain.js","Pages/PasswordGenerator.js","Context/App.js","Components/HomePageItems/DefaultLayout.js","Components/HomePageItems/CreateChainForm.js","Context/Home.js","Context/Keychain.js","Components/CustomNav/NavTabs.js","Components/CustomNav/index.js","Components/Footer/index.js","Components/App/index.js","reportWebVitals.js","index.js"],"names":["Home","HomeComponent","useContext","HomeContext","console","log","Container","className","Row","options","number","special","lowercase","uppercase","generatePasswordString","values","length","str","includedTypes","randomNum","len","Math","floor","random","i","randomKey","indexOf","push","defaultConfig","createPassword","config","keyBase","setLocalStorage","keychainName","pw","arr","localStorage","setItem","AES","encrypt","JSON","stringify","toString","AddItemForm","useState","validInputs","setValidInputs","KeychainContext","keychainData","setKeychainData","updateKeychainComponent","name","value","inputs","setInputs","handleInputChange","e","target","useEffect","Col","Form","onSubmit","handleAddKeychainItem","preventDefault","prompt","existingData","getItem","bytes","decrypt","parse","enc","Utf8","error","alert","getLocalStorage","updatedArr","items","Group","controlId","Label","Control","type","onChange","as","rows","size","style","resize","Button","variant","onClick","disabled","KeychainItem","id","viewKeychainItem","setViewKeychainItem","displayCopiedMessage","setDisplayCopiedMessage","deleteKeychainItem","handleViewKeychainItemValue","navigator","clipboard","writeText","then","copyToClipboard","Keychain","KeychainComponent","displayForm","xs","md","map","idx","PasswordGenerator","textAreaRows","setTextAreaRows","min","max","pwLength","setPwLength","pwText","setPwText","selectedValues","setSelectedValues","label","checked","checkBox","setCheckBox","btnOptions","handleGeneratePassword","Spinner","animation","role","displayedButton","setDisplayedButton","handleCheckboxChange","interval","setInterval","setTimeout","clearInterval","checkedBoxes","Object","entries","box","Array","from","key","Check","Range","calculatedRows","AppContext","createContext","AppProvider","children","defaultComponent","AppComponent","setAppComponent","Provider","updateAppComponent","componentName","DefaultLayout","updateHomeComponent","CreateChain","pwlength","pwmatch","errorMessage","setErrorMessage","password","confirmPassword","formInputs","setFormInputs","validFormInputs","setValidFormInputs","HomeProvider","defaultKey","setHomeComponent","KeychainProvider","setDisplayForm","setKeychainComponent","clearKeychainData","filtered","filter","_","NavTabs","setKey","keychainTab","setKeychainTab","handleUpdateKey","Tab","eventKey","title","Tabs","activeKey","onSelect","CustomNav","fluid","sx","sm","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7523624.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { HomeContext } from '../Context'\n// import { getUserPassword } from '../Utilty'\n\nexport default function Home() {\n\n    const { HomeComponent } = useContext(HomeContext)\n\n    console.log('rendering: Home')\n\n    return (\n        <Container className=\"my-5\">\n            {HomeComponent}\n            <Row className=\"mt-5\">\n                <h2 className=\"text-center\">new features coming soon</h2>\n                <h6 className=\"text-center\">(checkout the password generator!)</h6>\n            </Row>\n        </Container >\n    )\n}\n","const options = {\n    number: '0123456789',\n    special: `!#$%&*+-/;<=>?@^_'|~\\\\`,\n    lowercase: 'abcdefghijklmnopqrstuvwxyz',\n    uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ`\n};\n\n\nconst generatePasswordString = ({ values, length }) => {\n    let str = '';\n    let includedTypes = [];\n\n    const randomNum = (len) => Math.floor(Math.random() * len);\n\n    for (let i = 0; i < length; i++) {\n        const randomKey = values[randomNum(values.length)];\n        str += options[randomKey][randomNum(options[randomKey].length)];\n        if (includedTypes.indexOf(randomKey) === -1) includedTypes.push(randomKey);\n    };\n\n    if (includedTypes.length === values.length) return str;\n\n    return generatePasswordString({ values, length });\n}\n\nconst defaultConfig = {\n    values: [\n        \"number\",\n        \"special\",\n        \"lowercase\",\n        \"uppercase\"\n    ],\n    length: 128\n}\n\nexport const createPassword = (config = defaultConfig) => (\n    // validate there are selected values & a password length before calling\n    config.values.length\n    && config.length\n    && generatePasswordString(config)\n);","import { AES, enc, } from \"crypto-js/\";\nconst keyBase = 'cryptoKC';\n\nexport const getUserPassword = () => prompt('keychain access password');\n\nexport const setLocalStorage = (keychainName, pw, arr) => {\n    if (!keychainName || !pw) return\n    localStorage.setItem(`${keyBase}-${keychainName}`, AES.encrypt(JSON.stringify(arr), pw).toString())\n};\n\nexport const getLocalStorage = (keychainName, pw) => {\n    if (!keychainName) return console.log('no chain name selected');\n\n    const existingData = localStorage.getItem(`${keyBase}-${keychainName}`);\n    if (!existingData) return console.log('missing chain data, please load from backup');\n\n    try {\n\n        const bytes = AES.decrypt(existingData, pw);\n        const decryptedData = JSON.parse(bytes.toString(enc.Utf8));\n        return decryptedData;\n\n    } catch (error) { alert('unauthorized') };\n};","import React, { useContext, useEffect, useState } from 'react'\nimport { Col, Form, Row, Button } from 'react-bootstrap'\nimport { KeychainContext } from '../../Context'\nimport { createPassword, getUserPassword } from '../../Utilty'\nimport { getLocalStorage, setLocalStorage } from '../../Utilty/createKeychain'\n\nexport default function AddItemForm() {\n\n    const [validInputs, setValidInputs] = useState(false)\n    const { keychainData, setKeychainData, updateKeychainComponent } = useContext(KeychainContext)\n    const [inputs, setInputs] = useState({\n        name: '',\n        value: ''\n    })\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setInputs({ ...inputs, [name]: value })\n    }\n\n    const handleSuggestPassword = () => {\n        setInputs({ ...inputs, value: createPassword() })\n    }\n\n    const handleAddKeychainItem = (e) => {\n        if (!e) return\n        e.preventDefault()\n        console.log(inputs)\n        const { name } = keychainData\n\n        const pw = getUserPassword()\n        if (pw === null) return\n        if (!pw) return handleAddKeychainItem()\n\n        const arr = getLocalStorage(name, pw)\n        if (!arr) return handleAddKeychainItem()\n        const updatedArr = [inputs, ...arr]\n        setLocalStorage(keychainData.name, pw, updatedArr)\n        setKeychainData({ ...keychainData, items: updatedArr })\n        setInputs({ name: '', value: '' })\n        updateKeychainComponent()\n    }\n\n    useEffect(() => {\n        if (!inputs.name || !inputs.value) return setValidInputs(false)\n        if (!validInputs) setValidInputs(true)\n    }, [inputs])\n\n    console.log('rendering addItemForm')\n\n    return (\n        <Row className=\"border shadow flex-column m-0 mb-3\">\n            <Col className=\"p-3\">\n                <h3 className=\"mb-1\">Add item</h3>\n                <Form onSubmit={handleAddKeychainItem}>\n\n                    <Form.Group className=\"mb-1\" controlId=\"keychainItemName\">\n                        <Form.Label className=\"mb-0\">name</Form.Label>\n                        <Form.Control type=\"text\" name='name' value={inputs.name} onChange={handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-1\" controlId=\"keychainItemValue\">\n                        <Form.Label className=\"mb-0\">value</Form.Label>\n                        <Form.Control\n                            className=\"text-center\"\n                            as=\"textarea\"\n                            rows={6}\n                            name='value'\n                            size=\"sm\"\n                            value={inputs.value}\n                            style={{ resize: \"none\" }}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"d-flex justify-content-end\">\n                        <Button className=\"p-0 px-1\" variant=\"outline-warning text-dark\" size=\"sm\" onClick={handleSuggestPassword}>\n                            suggest password?\n                        </Button>\n                    </Form.Group>\n\n                    <hr />\n                    <Form.Group className=\"d-flex justify-content-end pb-3\">\n                        {validInputs\n                            ? <Button\n                                type=\"submit\"\n                                variant=\"outline-warning text-dark\"\n                            >\n                                add item\n                            </Button>\n                            : <Button disabled variant=\"outline-warning text-dark\" >add item</Button>\n                        }\n                    </Form.Group>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Col, Row, Form } from 'react-bootstrap';\nimport { FaEye, FaEyeSlash, FaTrashAlt, FaCopy } from \"react-icons/fa\";\nimport { KeychainContext } from '../../Context';\nimport { copyToClipboard } from '../../Utilty';\n\n\nexport default function KeychainItem({ name, value, id }) {\n\n    const [viewKeychainItem, setViewKeychainItem] = useState(false)\n    const [displayCopiedMessage, setDisplayCopiedMessage] = useState(false)\n\n    const { deleteKeychainItem } = useContext(KeychainContext)\n\n    const handleViewKeychainItemValue = () => {\n        viewKeychainItem && setDisplayCopiedMessage(false)\n        setViewKeychainItem(!viewKeychainItem)\n    }\n\n    const handleCopyToClipboard = () => {\n        if (displayCopiedMessage) return\n\n        copyToClipboard(value)\n        setDisplayCopiedMessage(true)\n    }\n\n\n    return (\n        <Row className=\"border shadow-sm flex-column m-0 mb-3\">\n            <Col className=\"d-flex justify-content-between align-items-center py-1\">\n                <FaTrashAlt onClick={() => deleteKeychainItem(id)} />\n                <p>{name}</p>\n                {viewKeychainItem\n                    ? <FaEyeSlash onClick={handleViewKeychainItemValue} />\n                    : <FaEye onClick={handleViewKeychainItemValue} />\n                }\n            </Col>\n            <Col className=\"text-center p-0\">\n\n                {viewKeychainItem &&\n                    <Form>\n                        <Form.Group className=\"mx-2 mb-3\" controlId=\"keychainItemValue\">\n                            <Form.Control\n                                className=\"text-center\"\n                                as=\"textarea\"\n                                rows={6}\n                                name='value'\n                                size=\"sm\"\n                                value={value}\n                                disabled\n                                style={{ resize: \"none\" }}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"d-flex justify-content-end m-0\">\n                            <FaCopy\n                                className=\"m-2\"\n                                onClick={handleCopyToClipboard}\n                            />\n                        </Form.Group>\n                    </Form>\n                }\n            </Col>\n        </Row>\n    )\n}\n","export const copyToClipboard = (value) => {\n\n    navigator.clipboard.writeText(value)\n        .then(() => console.log(value));\n}\n\n\n// export const focusAndCopyToCb = (el) => {\n//     const textVal = el.text().trim()\n//     if (!textVal) return\n//     el.select() && el.focus();\n//     copyToCb(textVal)\n// };","import React, { useContext } from 'react'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport { KeychainItem } from '../Components/KeychainPageItems'\nimport { KeychainContext } from '../Context'\n\nexport default function Keychain() {\n\n\n    const { keychainData, KeychainComponent, updateKeychainComponent, displayForm } = useContext(KeychainContext)\n    const { name, items } = keychainData\n\n    const toggleDisplayForm = () => {\n        if (!displayForm) updateKeychainComponent('addKeychainItemForm')\n        else updateKeychainComponent()\n    }\n\n    console.log('rendering: DefaultLayout')\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col xs={11} md={6} className=\"shadow border-orange p-3\">\n\n                    <Row>\n                        <Col>\n                            <h2>Keychain: {name}</h2>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-center my-3\" >\n                        <Col>\n                            {items.map(({ name, value }, idx) => <KeychainItem key={idx} id={idx} name={name} value={value} />)}\n                            <hr />\n\n                            {KeychainComponent}\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"px-0\">\n                        <Col className=\"d-flex justify-content-end px-0\">\n                            <Button\n                                className=\"mb-3 mx-3\"\n                                variant=\"outline-warning text-dark\"\n                                onClick={toggleDisplayForm}\n                            >\n                                {displayForm ? 'cancel' : 'add item'}\n                            </Button>\n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Form, Button, Spinner } from 'react-bootstrap'\nimport { createPassword } from '../Utilty'\n\nexport default function PasswordGenerator() {\n\n    const [textAreaRows, setTextAreaRows] = useState(3)\n    const [pwLength, setPwLength] = useState({\n        min: 8,\n        max: 128,\n        value: 68\n    })\n    const [pwText, setPwText] = useState('')\n    const [selectedValues, setSelectedValues] = useState([])\n    const [checkBox, setCheckBox] = useState({\n        number: {\n            id: 'number',\n            type: 'checkbox',\n            label: 'numbers',\n            checked: true\n        },\n        special: {\n            id: 'special',\n            type: 'checkbox',\n            label: 'special characters',\n            checked: true\n        },\n        lowercase: {\n            id: 'lowercase',\n            type: 'checkbox',\n            label: 'letters - lowercase',\n            checked: true\n        },\n        uppercase: {\n            id: 'uppercase',\n            type: 'checkbox',\n            label: 'letters - uppercase',\n            checked: true\n        }\n    })\n    const btnOptions = {\n\n        defaultBtn: () => (\n            < Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                disabled\n            >\n                generate\n            </Button >\n        )\n        ,\n        activeBtn: () => (\n            < Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                onClick={handleGeneratePassword}\n            >\n                generate\n            </Button >\n        )\n        ,\n        loadingBtn: () => (\n            <Button\n                variant=\"outline-info text-dark\"\n                className=\"w-100 my-3\"\n                disabled\n            >\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                <Spinner className=\"mx-1\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n            </Button>\n        )\n\n    }\n\n    const [displayedButton, setDisplayedButton] = useState(btnOptions.defaultBtn())\n    const handleCheckboxChange = (e) => {\n        const { id, checked } = e.target\n        setPwText('')\n        setCheckBox({\n            ...checkBox,\n            [id]: {\n                ...checkBox[id],\n                checked\n            }\n        })\n    }\n\n    const handleRangeChange = (e) => {\n        const { value } = e.target\n        setPwText('')\n        setPwLength({ ...pwLength, value })\n        /* on a mobile device, the textarea needs to be:\n            - minimum 1 row tall\n            - 7 rows tall if 128 is selected\n            128/7 ≈ 18\n        */\n        const calculatedRows = Math.floor(value / 18)\n        setTextAreaRows(calculatedRows || 1)\n    }\n\n    const handleGeneratePassword = () => {\n\n        const config = {\n            values: selectedValues,\n            length: pwLength.value\n        };\n\n        setDisplayedButton(btnOptions.loadingBtn())\n\n        let interval = setInterval(() => setPwText(createPassword(config)), 100)\n\n        setTimeout(() => {\n            clearInterval(interval)\n            setDisplayedButton(btnOptions.activeBtn())\n        }, 2000)\n    }\n\n    useEffect(() => {\n        const checkedBoxes = []\n        for (const [_, box] of Object.entries(checkBox)) {\n            box.checked && checkedBoxes.push(box.id);\n        };\n        setSelectedValues(checkedBoxes)\n    }, [checkBox])\n\n    useEffect(() => {\n        if (selectedValues.length) setDisplayedButton(btnOptions.activeBtn())\n        else setDisplayedButton(btnOptions.defaultBtn())\n\n    }, [selectedValues])\n\n    console.log('rendering: DefaultLayout')\n\n    return (\n        <Container className=\"my-5\">\n            <Row className=\"justify-content-center\">\n                <Col xs={11} md={6} className=\"shadow border-orange p-3\" >\n\n                    <Row>\n                        <Col>\n                            <h2>Password Generator</h2>\n                            <ol>\n                                <li><p>select characters</p></li>\n                                <li><p>select length</p></li>\n                                <li><p>click generate</p></li>\n                            </ol>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"border mx-1\">\n                        <Col>\n                            <Form className='mb-3'>\n                                <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                                    {Array.from(Object.entries(checkBox)).map((key) => {\n                                        const { id, type, label, checked } = key[1]\n                                        return < Form.Check\n                                            className=\"mb-1\"\n                                            key={id}\n                                            type={type}\n                                            id={id}\n                                            label={label}\n                                            checked={checked}\n                                            onChange={handleCheckboxChange}\n                                        />\n                                    })}\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>length: {pwLength.value}</Form.Label>\n                                    <Form.Range\n                                        min={pwLength.min}\n                                        max={pwLength.max}\n                                        value={pwLength.value}\n                                        onChange={handleRangeChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Control\n                                        className=\"text-center\"\n                                        as=\"textarea\"\n                                        rows={textAreaRows}\n                                        size=\"sm\"\n                                        value={pwText}\n                                        // disabled\n                                        style={{ resize: \"none\" }}\n                                    />\n                                </Form.Group>\n\n                                {displayedButton}\n\n                            </Form>\n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        </Container >\n    )\n}\n","import React, { useState, createContext } from 'react'\nimport { Keychain, Home, PasswordGenerator } from '../Pages'\n\nexport const AppContext = createContext()\n\nexport const AppProvider = ({ children }) => {\n\n    const defaultComponent = <Home key=\"Home\" />\n    const [AppComponent, setAppComponent] = useState(defaultComponent)\n\n    const updateAppComponent = (componentName) => {\n        // slight delay just for fun / feel\n        setTimeout(() => {\n            switch (componentName) {\n                case 'Home': setAppComponent(<Home key={componentName} />)\n                    break;\n\n                case 'PasswordGenerator': setAppComponent(<PasswordGenerator key={componentName} />)\n                    break;\n\n                case 'Keychain': setAppComponent(<Keychain key={componentName} />)\n                    break;\n\n                default: setAppComponent(defaultComponent)\n                    break;\n            }\n        }, 100);\n    }\n\n    console.log('rendering: AppProvider')\n\n    return (\n        <AppContext.Provider value={{ AppComponent, updateAppComponent }}>\n            {children}\n        </AppContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport { HomeContext } from '../../Context'\n\nexport default function DefaultLayout() {\n    const { updateHomeComponent } = useContext(HomeContext)\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={11} md={6} className=\"shadow border-orange p-3\">\n                <Row >\n                    <Col >\n                        <h1>Welcome!</h1>\n                        <ul>\n                            <li><p>improve your digital security</p></li>\n                            <li><p>create new passwords or access keys</p></li>\n                            <li><p>add existing passwords or keys</p></li>\n                            <li><p>keep them safe in an encrypted keychain</p></li>\n                        </ul>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-2\">\n                        <Button\n                            variant=\"outline-warning text-dark\"\n                            className=\"w-100 my-3\"\n                            onClick={() => updateHomeComponent('createChain')}\n                        >\n                            create new chain\n                        </Button>\n                        <Button disabled variant=\"outline-warning text-dark\" className=\"w-100 my-3\">access existing chain</Button>\n                        <Button disabled variant=\"outline-warning text-dark\" className=\"w-100 my-3\">load from backup</Button>\n                    </Col>\n                </Row>\n            </Col >\n        </Row >\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { AppContext, HomeContext, KeychainContext } from '../../Context'\nimport { setLocalStorage } from '../../Utilty/createKeychain'\n\nexport default function CreateChain() {\n\n    const { updateAppComponent } = useContext(AppContext)\n    const { setKeychainData } = useContext(KeychainContext)\n    const { updateHomeComponent } = useContext(HomeContext)\n    const [errorMessage, setErrorMessage] = useState({\n        name: '',\n        pwlength: '',\n        pwmatch: ''\n    })\n\n    const [formInputs, setFormInputs] = useState({\n        name: 'test-0',\n        password: 'password',\n        confirmPassword: 'password'\n    })\n\n    const [validFormInputs, setValidFormInputs] = useState(false)\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setFormInputs({ ...formInputs, [name]: value })\n    }\n\n    const handleCreateChain = () => {\n        const { name, password } = formInputs\n        setKeychainData({ name, items: [] })\n        setLocalStorage(name, password, [])\n\n        updateAppComponent('keychain')\n    }\n\n    useEffect(() => {\n        const { name, password, confirmPassword } = formInputs\n        if (!password || !confirmPassword) return\n\n        if (!name) {\n            // no name entered\n            setErrorMessage({ name: 'please enter a name', pwlength: '', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n\n        if (password.length < 8) {\n            setErrorMessage({ ...errorMessage, name: '', pwlength: 'must be atleast 8 characters long', pwmatch: '' })\n            setValidFormInputs(false)\n            return\n        }\n        if (password !== confirmPassword) {\n            // passwords do not match\n            setErrorMessage({ name: '', pwlength: '', pwmatch: 'passwords must match' })\n            setValidFormInputs(false)\n            return\n        }\n        setErrorMessage({ name: '', pwlength: '', pwmatch: '' })\n        setValidFormInputs(true)\n\n    }, [formInputs])\n\n    console.log('rendering: CreateChain')\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col xs={10} md={6} className=\"border-orange shadow p-4\">\n                <Row >\n                    <Col  >\n                        <h1>Create new chain</h1>\n                        <ol>\n                            <li><p >enter a name</p></li>\n                            <li><p >enter a password</p></li>\n                            <li><p>click create</p></li>\n                        </ol>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"border px-0 mx-2\">\n                        <Form className=\"mt-3 mx-3\">\n\n                            <Form.Group className=\"mb-3\" controlId=\"keychainName\">\n                                <Form.Label>keychain name: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.name}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"input\"\n                                    name=\"name\"\n                                    value={formInputs.name}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"keychainPassword\">\n                                <Form.Label>password: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.pwlength}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={formInputs.password}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"kychainConfirmPassword\">\n                                <Form.Label>confirm password: </Form.Label>\n                                <p className=\"error mb-0\">{errorMessage.pwmatch}</p>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    value={formInputs.confirmPassword}\n                                    onChange={(handleInputChange)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group className=\"d-flex justify-content-between\">\n                                <Button\n                                    variant=\"outline-dark\"\n                                    className=\"my-3\"\n                                    onClick={() => updateHomeComponent('DefaultLayout')}\n                                >\n                                    back\n                                </Button>\n\n                                {validFormInputs\n                                    ? <Button\n                                        variant=\"outline-warning text-dark\"\n                                        className=\"my-3\"\n                                        onClick={handleCreateChain}\n                                    >\n                                        create\n                                    </Button>\n                                    : <Button\n                                        disabled\n                                        variant=\"outline-warning text-dark\"\n                                        className=\"my-3\"\n                                    >\n                                        create\n                                    </Button>\n                                }\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n\n            </Col>\n        </Row>\n    )\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { AppContext } from '.'\nimport { DefaultLayout, CreateChainForm } from '../Components/HomePageItems'\n\nexport const HomeContext = createContext()\n\nexport const HomeProvider = ({ children }) => {\n\n    const { AppComponent } = useContext(AppContext)\n    const [defaultKey] = useState('DefaultLayout')\n    const [HomeComponent, setHomeComponent] = useState(<DefaultLayout key={`Home-${defaultKey}`} />)\n\n    useEffect(() => {\n        if (AppComponent.key === 'Home') updateHomeComponent(defaultKey)\n    }, [AppComponent, defaultKey])\n\n    const updateHomeComponent = (componentName) => {\n        // setTimeout(() => {\n        switch (componentName) {\n            case defaultKey:\n                setHomeComponent(<DefaultLayout key={`Home-${componentName}`} />)\n                break;\n\n            case 'createChain':\n                setHomeComponent(<CreateChainForm key={componentName} />)\n                break;\n\n            default:\n                break;\n        }\n        // }, 100)\n    }\n\n    console.log('rendering: HomeProvider')\n\n    return (\n        <HomeContext.Provider value={{ HomeComponent, updateHomeComponent }}>\n            {children}\n        </HomeContext.Provider>\n    )\n}\n","import React, { createContext, useState } from 'react';\nimport { AddItemForm } from '../Components/KeychainPageItems';\n\nexport const KeychainContext = createContext()\n\nexport const KeychainProvider = ({ children }) => {\n\n    const [displayForm, setDisplayForm] = useState(false)\n\n    const [KeychainComponent, setKeychainComponent] = useState()\n    const [keychainData, setKeychainData] = useState({\n        name: '',\n        items: []\n    })\n\n    /**\n     * reset default layout when tab is clicked\n     useEffect(() => {\n         if (AppComponent.key === 'Keychain') updateKeychainComponent(defaultKey)\n        }, [AppComponent])\n    */\n\n    const clearKeychainData = () => setKeychainData({ name: '', items: [] })\n\n    const deleteKeychainItem = (id) => {\n        const filtered = keychainData.items.filter((_, idx) => id !== idx)\n        setKeychainData({ ...keychainData, items: filtered })\n    }\n\n    const updateKeychainComponent = (componentName) => {\n        switch (componentName) {\n            case 'addKeychainItemForm':\n                setKeychainComponent(<AddItemForm key={componentName} />)\n                setDisplayForm(true)\n                break;\n\n            default:\n                setKeychainComponent(null)\n                setDisplayForm(false)\n                break;\n        }\n    }\n\n    console.log('rendering: KeychainProvider')\n\n    return (\n        <KeychainContext.Provider value={{\n            KeychainComponent,\n            updateKeychainComponent,\n\n            displayForm,\n            setDisplayForm,\n\n            clearKeychainData,\n            deleteKeychainItem,\n            setKeychainData,\n            keychainData\n        }}>\n            {children}\n        </KeychainContext.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { AppContext, KeychainContext } from '../../Context';\n\nexport default function NavTabs() {\n\n    const [key, setKey] = useState('Home');\n    const [keychainTab, setKeychainTab] = useState()\n    const { updateAppComponent } = useContext(AppContext)\n    const { keychainData } = useContext(KeychainContext)\n    // const keyBase = 'cryptoKC';\n\n    const handleUpdateKey = (key) => {\n        setKey(key)\n        console.log(key)\n        updateAppComponent(key)\n    }\n\n    useEffect(() => {\n        const { name } = keychainData\n        if (!name) return setKeychainTab()\n        setKeychainTab(<Tab eventKey=\"Keychain\" title={name} />)\n        handleUpdateKey('Keychain')\n\n    }, [keychainData])\n\n    // const loopThroughChains = (cb) => {\n    //     for (const [key] of Object.entries(localStorage)) {\n    //         // format each name by removing the 'keyBase-' text\n    //         const k = key.split('-');\n    //         if (k[0] !== keyBase) continue\n    //         k.shift();\n    //         const name = k.join(' ')\n    //         cb(name);\n\n    //     };\n    // };\n\n    // const displaySavedChains = () => {\n    //     const cb = (name) => {\n    //         setKeychainTab((tabs) => [\n    //             ...tabs,\n    //             <Tab eventKey={name} title={name} key={name} >\n    //                 {/* <h1 className=\"d-block\">{name}</h1> */}\n    //             </Tab>\n    //         ])\n    //     };\n\n    //     loopThroughChains(cb);\n    // };\n\n    // useEffect(() => {\n    //     const testKeys = ['one', 'two']\n    //     testKeys.map(key => localStorage.setItem(`${keyBase}-${key}`, `data-${key}`))\n    //     // displaySavedChains();\n    // }, [])\n\n    return (\n        <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(key) => handleUpdateKey(key)}\n            className=\" justify-content-end\"\n        >\n            <Tab eventKey=\"Home\" title=\"Home\" />\n            <Tab eventKey=\"PasswordGenerator\" title=\"password gen\" />\n            {keychainTab}\n        </Tabs>\n    );\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport NavTabs from './NavTabs'\n\n\nexport default function CustomNav() {\n    return (\n        <nav className=\"w-100 mb-5\">\n            <Container fluid>\n                <Row className=\"d-flex justify-content-between align-items-end \">\n                    <Col sx={12} sm={4}>\n                        <h1 id=\"title\" className=\"my-2 fs-6\">crypto <span className=\"fs-1\">\n                            <span className=\"text-decoration-underline\">key</span>chain</span>\n                        </h1>\n                    </Col>\n                    <Col sx={12} sm={8}>\n                        <NavTabs />\n                    </Col>\n                </Row>\n            </Container>\n        </nav>\n    )\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <h6 id=\"signature\">_samuel fox <small>2021</small></h6>\n    )\n}\n","// import logo from './logo.svg';\nimport React, { useContext } from 'react'\nimport { AppContext, HomeProvider, KeychainProvider } from '../../Context/'\nimport CustomNav from '../CustomNav'\nimport Footer from '../Footer';\nimport './App.css';\n\nfunction App() {\n  const { AppComponent } = useContext(AppContext)\n\n  console.log('rendering: App')\n\n  return (\n    <>\n      <KeychainProvider>\n        <CustomNav />\n        <HomeProvider>\n\n          {AppComponent}\n\n        </HomeProvider>\n        <Footer />\n      </KeychainProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { AppProvider } from './Context';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './Components/App/App.scss';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}